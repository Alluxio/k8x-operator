{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset.jsx\";\nimport React, { Component } from 'react';\nimport CreateDataset from '../components/dataset/CreateDataset';\nimport ShowDataset from '../components/dataset/ShowDataset';\nimport DeleteDataset from \"../components/dataset/DeleteDataset\";\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatasetUpdateStatus = {\n  NoStatus: 0,\n  Success: 1,\n  WrongJSON: 2,\n  UnableToCreate: 3\n};\nconst DatasetUpdateStatusElement = [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"success\",\n  children: \"Success!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"warning\",\n  children: \"Unable to Create JSON Object, check input!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"error\",\n  children: \"Unable to Create!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 5\n}, this)];\nclass Dataset extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.handleCreateDataset = stringifyJSON => {\n      try {\n        const newObj = JSON.parse(stringifyJSON);\n        console.log(JSON.stringify(newObj));\n\n        // Send Data\n        this.sendPOST(newObj).then(status => {\n          console.log(status);\n          this.setState({\n            datasetUpdateStatus: status\n          });\n        });\n      } catch (e) {\n        console.error(e);\n        this.setState({\n          datasetUpdateStatus: DatasetUpdateStatus.WrongJSON\n        });\n      }\n    };\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      hasDataset: false,\n      error: '',\n      datasetConfigJSON: JSON,\n      datasetStatusJSON: JSON,\n      datasetOriginalJSON: JSON,\n      datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      const response = await fetch(this.state.serverUrl);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      if (result.items.length === 0) {\n        this.setState({\n          isLoaded: true,\n          hasDataset: false\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          hasDataset: true,\n          datasetOriginalJSON: result.items[0],\n          datasetStatusJSON: result.items[0].status,\n          datasetConfigJSON: result.items[0].datasetConfig\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      this.setState({\n        error: error\n      });\n    }\n  }\n  async sendPOST(JSONObject) {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify(JSONObject)\n    };\n    const response = await fetch(this.state.serverUrl, requestOptions);\n    if (!response.ok) {\n      return DatasetUpdateStatus.UnableToCreate;\n    }\n    const data = await response.json();\n    return DatasetUpdateStatus.Success;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dataset Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DS JSON\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original Input JSON:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(this.state.datasetOriginalJSON, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShowDataset, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteDataset, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateDataset, {\n        state: this.state,\n        handleCreateDataset: this.handleCreateDataset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Indicator\",\n        children: DatasetUpdateStatusElement[this.state.datasetUpdateStatus]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Dataset;","map":{"version":3,"names":["React","Component","CreateDataset","ShowDataset","DeleteDataset","Alert","Stack","Fragment","_Fragment","jsxDEV","_jsxDEV","DatasetUpdateStatus","NoStatus","Success","WrongJSON","UnableToCreate","DatasetUpdateStatusElement","variant","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","Dataset","constructor","props","handleCreateDataset","stringifyJSON","newObj","JSON","parse","console","log","stringify","sendPOST","then","status","setState","datasetUpdateStatus","e","error","state","serverUrl","isLoaded","hasDataset","datasetConfigJSON","datasetStatusJSON","datasetOriginalJSON","fetchData","bind","componentDidMount","response","fetch","ok","Error","result","json","items","length","datasetConfig","JSONObject","requestOptions","method","body","data","render","className"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CreateDataset from '../components/dataset/CreateDataset';\nimport ShowDataset from '../components/dataset/ShowDataset';\nimport DeleteDataset from \"../components/dataset/DeleteDataset\";\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nconst DatasetUpdateStatus =  {\n    NoStatus : 0,\n    Success : 1,\n    WrongJSON : 2,\n    UnableToCreate : 3,\n}\n\nconst DatasetUpdateStatusElement = [\n    <></>,\n    <Alert variant=\"outlined\" severity=\"success\">\n        Success!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"warning\">\n        Unable to Create JSON Object, check input!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"error\">\n        Unable to Create!\n    </Alert>\n]\n\nclass Dataset extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: 'http://localhost:5220/dataset',\n            isLoaded: false,\n            hasDataset: false,\n            error: '',\n\n            datasetConfigJSON: JSON,\n            datasetStatusJSON: JSON,\n            datasetOriginalJSON: JSON,\n\n            datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n        };\n\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    async fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            const response = await fetch(this.state.serverUrl)\n            if (!response.ok) { throw new Error('Network response was not ok');}\n\n            const result = await response.json();\n            if (result.items.length === 0) {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : false\n                });\n            } else {\n                this.setState({\n                    isLoaded: true,\n\n                    hasDataset : true,\n                    datasetOriginalJSON: result.items[0],\n                    datasetStatusJSON: result.items[0].status,\n                    datasetConfigJSON: result.items[0].datasetConfig,\n                });\n            }\n        } catch (error) {\n            console.error(error);\n            this.setState({\n                error: error\n            });\n        }\n    }\n\n    async sendPOST(JSONObject) {\n        // POST request using fetch with async/await\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(JSONObject)\n        };\n        const response = await fetch(this.state.serverUrl, requestOptions);\n        if (!response.ok) {\n            return DatasetUpdateStatus.UnableToCreate\n        }\n\n        const data = await response.json();\n\n        return DatasetUpdateStatus.Success\n    }\n\n    //\n\n    handleCreateDataset = (stringifyJSON) => {\n        try {\n            const newObj = JSON.parse(stringifyJSON)\n            console.log(JSON.stringify(newObj))\n\n            // Send Data\n            this.sendPOST(newObj).then(status => {\n                console.log(status)\n                this.setState(\n                    {datasetUpdateStatus: status}\n                )\n            })\n\n        } catch (e) {\n            console.error(e)\n            this.setState(\n                {datasetUpdateStatus: DatasetUpdateStatus.WrongJSON}\n            )\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Panel</h1>\n\n                <div className='DS JSON'>\n                    <h3>Original Input JSON:</h3>\n                    <pre>{JSON.stringify(this.state.datasetOriginalJSON, null, 2)}</pre>\n                </div>\n\n                <ShowDataset state={this.state}/>\n                <DeleteDataset state={this.state}/>\n                <CreateDataset state={this.state} handleCreateDataset={this.handleCreateDataset}/>\n\n\n                <div className=\"Indicator\">\n                    {DatasetUpdateStatusElement[this.state.datasetUpdateStatus]}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dataset;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}