{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalDatasetObject = {\n  name: '',\n  path: '',\n  status: {\n    boundedAlluxioCluster: '',\n    phase: ''\n  }\n};\nclass GetDataset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      dataset: initalDatasetObject,\n      isLoaded: false,\n      error: ''\n    };\n    this.fetchTesting = async () => {\n      try {\n        const response = await fetch(this.state.serverUrl);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData() {\n    console.log(\"Fetch data\");\n    fetch(this.state.serverUrl).then(res => res.json()).then(result => {\n      console.log(result);\n      console.log(result.items[0].credentials);\n      console.log(result.items[0].status);\n      let currentDatasetObject = {\n        name: result.items[0].name,\n        path: result.items[0].path,\n        status: result.items[0].status\n      };\n      this.setState({\n        isLoaded: true,\n        dataset: currentDatasetObject\n      });\n    }, error => {\n      this.setState({\n        isLoaded: false,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      dataset\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: dataset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default GetDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","initalDatasetObject","name","path","status","boundedAlluxioCluster","phase","GetDataset","constructor","args","state","serverUrl","dataset","isLoaded","error","fetchTesting","response","fetch","console","log","componentDidMount","fetchData","then","res","json","result","items","credentials","currentDatasetObject","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx"],"sourcesContent":["import { Component } from 'react';\nimport dataset from \"../../pages/dataset\";\n\ninterface Dataset {\n    name: string,\n    path: string,\n    credentials?: {\n\n    }\n    status: {\n\n    }\n}\nconst initalDatasetObject : Dataset = {\n    name: '',\n    path: '',\n    status: {\n        boundedAlluxioCluster: '',\n        phase: '',\n    }\n}\n\nclass GetDataset extends Component {\n    state = {\n        serverUrl: 'http://localhost:5220/dataset',\n        dataset: initalDatasetObject,\n        isLoaded: false,\n        error: '',\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchTesting = async () => {\n        try {\n            const response = await fetch(this.state.serverUrl);\n            console.log(response);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    fetchData() {\n        console.log(\"Fetch data\")\n        fetch(this.state.serverUrl)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    console.log(result.items[0].credentials);\n                    console.log(result.items[0].status);\n\n                    let currentDatasetObject: Dataset = {\n                        name : result.items[0].name,\n                        path : result.items[0].path,\n                        status : result.items[0].status,\n                    }\n\n                    this.setState({\n                        isLoaded : true,\n                        dataset : currentDatasetObject,\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, dataset} = this.state;\n        if (error) {\n            return <div className=\"GetDataset\">Error: {error}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"GetDataset\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"GetDataset\">\n                    {dataset.name}\n                    {/*{currentDatasetStatus}*/}\n                    {/*<ul>*/}\n                    {/*    {items.map(item => (*/}\n                    {/*        <li key={item.id}>*/}\n                    {/*            {item.name} {item.price}*/}\n                    {/*        </li>*/}\n                    {/*    ))}*/}\n                    {/*</ul>*/}\n                </div>\n            );\n        }\n    }\n}\n\nexport default GetDataset\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}