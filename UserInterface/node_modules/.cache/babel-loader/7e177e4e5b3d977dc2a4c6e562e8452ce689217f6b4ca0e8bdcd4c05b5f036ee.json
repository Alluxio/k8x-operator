{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass GetDataset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      error: '',\n      datasetOriginalJSON: JSON,\n      hasDataset: false\n    };\n  }\n  componentDidMount() {\n    this.checkConnection();\n    this.fetchData();\n  }\n  checkConnection() {\n    try {\n      const response = fetch(this.state.serverUrl);\n      console.log(response.then());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      const response = await fetch(this.state.serverUrl);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      const size = result.items.length;\n      if (size === 0) {\n        this.setState({\n          isLoaded: true,\n          hasDataset: false\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          datasetOriginalJSON: result.items[0],\n          hasDataset: true\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      fetch(this.state.serverUrl).then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          datasetOriginalJSON: result.items[0]\n        });\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      dataset\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), dataset.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Path\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), dataset.path]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Status\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS JSON\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Original JSON:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: JSON.stringify(this.state.datasetOriginalJSON)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default GetDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","GetDataset","constructor","args","state","serverUrl","isLoaded","error","datasetOriginalJSON","JSON","hasDataset","componentDidMount","checkConnection","fetchData","response","fetch","console","log","then","ok","Error","result","json","size","items","length","setState","res","render","dataset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","path","stringify"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.jsx"],"sourcesContent":["import { Component } from 'react';\n\n\n\n\nclass GetDataset extends Component {\n    state = {\n        serverUrl: 'http://localhost:5220/dataset',\n        isLoaded: false,\n        error: '',\n        datasetOriginalJSON: JSON,\n        hasDataset: false\n    };\n\n    componentDidMount() {\n        this.checkConnection()\n        this.fetchData();\n    }\n\n    checkConnection() {\n        try {\n            const response = fetch(this.state.serverUrl)\n            console.log(response.then())\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    async fetchData() {\n        console.log(\"Fetch data\")\n\n        try {\n            const response = await fetch(this.state.serverUrl)\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const result = await response.json();\n            const size = result.items.length\n            if (size === 0) {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : false\n                });\n            } else {\n                this.setState({\n                    isLoaded: true,\n                    datasetOriginalJSON: result.items[0],\n                    hasDataset : true\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            fetch(this.state.serverUrl)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            datasetOriginalJSON: result.items[0]\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: false,\n                            error\n                        });\n                    }\n                )\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        const { error, isLoaded, dataset} = this.state;\n        if (error) {\n            return <div className=\"GetDataset\">Error: {error}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"GetDataset\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"GetDataset\">\n\n                    <div className='DS Name'>\n                        <h3>Data Set Name:</h3>\n                        {dataset.name}\n                    </div>\n\n                    <div className='DS Path'>\n                        <h3>Data Set Status:</h3>\n                        {dataset.path}\n                    </div>\n\n                    <div className='DS Status'>\n                        <h3>Data Set Status:</h3>\n                        {/*<h4>boundedAlluxioCluster: </h4>*/}\n                        {/*{dataset.status?.get('boundedAlluxioCluster')}*/}\n                        {/*<h4>phase: </h4>*/}\n                        {/*{dataset.status?.get('phase')}*/}\n                    </div>\n\n                    <div className='DS JSON'>\n                        <h3>Original JSON:</h3>\n                        <>{JSON.stringify(this.state.datasetOriginalJSON)}</>\n\n                    </div>\n\n                </div>\n            );\n        }\n    }\n}\n\nexport default GetDataset\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}