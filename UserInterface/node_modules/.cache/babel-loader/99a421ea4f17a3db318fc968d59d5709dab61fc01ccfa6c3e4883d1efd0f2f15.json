{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/dataset-controller.jsx\";\nimport React, { Component } from 'react';\nimport CreateObject from \"../util/CreateObject\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport { AlertMethod } from \"../components/alert/Alert\";\nimport { sendRequest, getRequest, isJSONString } from \"../util/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverUrl = '/api/dataset';\nclass DatasetController extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGetRequest = () => {\n      // Call getRequest\n      getRequest(serverUrl).then(statusCodeAndMsg => {\n        if (statusCodeAndMsg[0] === AlertMethod.Success) {\n          // TODO find out why it is always different, and not update list correctly.\n          // if (this.state.datasetListJSON !== statusCodeAndMsg[2]['datasets']) {\n          //     console.log(\"Different JSON File\")\n          // } else {\n          //     console.log(\"Same JSON File\")\n          // }\n\n          this.setState({\n            datasetListJSON: statusCodeAndMsg[2]['datasets']\n          });\n        } else {\n          this.setState({\n            alertMethod: statusCodeAndMsg[0],\n            alertMessage: statusCodeAndMsg[1]\n          });\n        }\n      });\n    };\n    // handleSendRequest is a func that will call  and update the panel status\n    this.handleSendRequest = (stringifyJSON, httpMethod) => {\n      // Check the str is JSON or not\n      if (!isJSONString(stringifyJSON)) {\n        this.setState({\n          alertMethod: AlertMethod.Warning,\n          alertMessage: 'This is not a JSON file.'\n        });\n        return;\n      }\n\n      // Prep Http request\n      const requestOptions = {\n        method: httpMethod,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: stringifyJSON\n      };\n\n      // Call sendRequest\n      sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n        this.setState({\n          alertMethod: statusCodeAndMsg[0],\n          alertMessage: statusCodeAndMsg[1]\n        });\n      });\n    };\n    this.handleCleanAlertStatus = () => {\n      this.setState({\n        alertMethod: AlertMethod.NoStatus,\n        alertMessage: ''\n      });\n    };\n    this.state = {\n      datasetListJSON: JSON,\n      alertMethod: AlertMethod.NoStatus,\n      alertMessage: ''\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleGetRequest();\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      datasetListJSON\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dataset Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Datasets, {\n        datasetListJSON: datasetListJSON,\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateObject, {\n        objectKind: 'Dataset',\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperatorAlert, {\n        alertMethod: this.state.alertMethod,\n        alertMessage: this.state.alertMessage,\n        handleCleanAlertStatus: this.handleCleanAlertStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatasetController;","map":{"version":3,"names":["React","Component","CreateObject","Datasets","OperatorAlert","AlertMethod","sendRequest","getRequest","isJSONString","jsxDEV","_jsxDEV","serverUrl","DatasetController","constructor","props","handleGetRequest","then","statusCodeAndMsg","Success","setState","datasetListJSON","alertMethod","alertMessage","handleSendRequest","stringifyJSON","httpMethod","Warning","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","state","JSON","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","objectKind"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/dataset-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CreateObject from \"../util/CreateObject\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest, getRequest, isJSONString} from \"../util/util\";\n\nconst serverUrl = '/api/dataset'\n\nclass DatasetController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datasetListJSON: JSON,\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                // TODO find out why it is always different, and not update list correctly.\n                // if (this.state.datasetListJSON !== statusCodeAndMsg[2]['datasets']) {\n                //     console.log(\"Different JSON File\")\n                // } else {\n                //     console.log(\"Same JSON File\")\n                // }\n\n                this.setState({\n                    datasetListJSON : statusCodeAndMsg[2]['datasets'],\n                });\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call  and update the panel status\n    handleSendRequest = (stringifyJSON, httpMethod) =>  {\n        // Check the str is JSON or not\n        if (!isJSONString(stringifyJSON)) {\n            this.setState({\n                alertMethod : AlertMethod.Warning,\n                alertMessage: 'This is not a JSON file.',\n            })\n            return\n        }\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        const {datasetListJSON} = this.state\n\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Controller Panel</h1>\n                <br/>\n                <Datasets\n                    datasetListJSON={datasetListJSON}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <CreateObject\n                    objectKind={'Dataset'}\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatasetController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}