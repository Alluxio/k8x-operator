{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass GetDataset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      datasetOriginalJSON: JSON,\n      hasDataset: false\n    };\n  }\n  componentDidMount() {\n    this.checkConnection();\n    this.fetchData();\n  }\n  checkConnection() {\n    try {\n      const response = fetch(this.state.serverUrl);\n      console.log(response.then());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      const response = await fetch(this.state.serverUrl);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      const size = result.items.length;\n      if (size === 0) {\n        this.setState({\n          isLoaded: true,\n          hasDataset: false\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          datasetOriginalJSON: result.items[0],\n          hasDataset: true\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // fetchData() {\n  //     console.log(\"Fetch data\")\n  //     try {\n  //         fetch(this.state.serverUrl)\n  //             .then(res => res.json())\n  //             .then(\n  //                 (result) => {\n  //                     this.setState({\n  //                         isLoaded: true,\n  //                         datasetOriginalJSON: result.items[0]\n  //                     });\n  //                 },\n  //                 (error) => {\n  //                     this.setState({\n  //                         isLoaded: false,\n  //                         error\n  //                     });\n  //                 }\n  //             )\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // }\n\n  render() {\n    const {\n      hasDataset,\n      isLoaded,\n      datasetOriginalJSON\n    } = this.state;\n    if (!hasDataset) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"There is no Alive Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), datasetOriginalJSON.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Path\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), datasetOriginalJSON.path]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Status\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS JSON\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Original JSON:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: JSON.stringify(this.state.datasetOriginalJSON)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default GetDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","GetDataset","constructor","args","state","serverUrl","isLoaded","datasetOriginalJSON","JSON","hasDataset","componentDidMount","checkConnection","fetchData","response","fetch","console","log","then","error","ok","Error","result","json","size","items","length","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","path","stringify"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.jsx"],"sourcesContent":["import { Component } from 'react';\n\n\n\n\nclass GetDataset extends Component {\n    state = {\n        serverUrl: 'http://localhost:5220/dataset',\n        isLoaded: false,\n        datasetOriginalJSON: JSON,\n        hasDataset: false\n    };\n\n    componentDidMount() {\n        this.checkConnection()\n        this.fetchData();\n    }\n\n    checkConnection() {\n        try {\n            const response = fetch(this.state.serverUrl)\n            console.log(response.then())\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    async fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            const response = await fetch(this.state.serverUrl)\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const result = await response.json();\n            const size = result.items.length\n            if (size === 0) {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : false\n                });\n            } else {\n                this.setState({\n                    isLoaded: true,\n                    datasetOriginalJSON: result.items[0],\n                    hasDataset : true\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // fetchData() {\n    //     console.log(\"Fetch data\")\n    //     try {\n    //         fetch(this.state.serverUrl)\n    //             .then(res => res.json())\n    //             .then(\n    //                 (result) => {\n    //                     this.setState({\n    //                         isLoaded: true,\n    //                         datasetOriginalJSON: result.items[0]\n    //                     });\n    //                 },\n    //                 (error) => {\n    //                     this.setState({\n    //                         isLoaded: false,\n    //                         error\n    //                     });\n    //                 }\n    //             )\n    //     } catch (error) {\n    //         console.error(error);\n    //     }\n    // }\n\n    render() {\n        const {hasDataset, isLoaded, datasetOriginalJSON} = this.state;\n        if (!hasDataset) {\n            return <div className=\"GetDataset\">There is no Alive Dataset</div>;\n        } else if (!isLoaded) {\n            return <div className=\"GetDataset\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"GetDataset\">\n\n                    <div className='DS Name'>\n                        <h3>Data Set Name:</h3>\n                        {datasetOriginalJSON.name}\n                    </div>\n\n                    <div className='DS Path'>\n                        <h3>Data Set Status:</h3>\n                        {datasetOriginalJSON.path}\n                    </div>\n\n                    <div className='DS Status'>\n                        <h3>Data Set Status:</h3>\n                        {/*<h4>boundedAlluxioCluster: </h4>*/}\n                        {/*{dataset.status?.get('boundedAlluxioCluster')}*/}\n                        {/*<h4>phase: </h4>*/}\n                        {/*{dataset.status?.get('phase')}*/}\n                    </div>\n\n                    <div className='DS JSON'>\n                        <h3>Original JSON:</h3>\n                        <>{JSON.stringify(this.state.datasetOriginalJSON)}</>\n\n                    </div>\n\n                </div>\n            );\n        }\n    }\n}\n\nexport default GetDataset\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}