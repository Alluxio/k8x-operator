{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreateDataset extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      hasDataset: false,\n      error: '',\n      datasetOriginalJSON: JSON,\n      datasetUserInput: JSON.stringify(JSON),\n      datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      const response = await fetch(this.state.serverUrl);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      const size = result.items.length;\n      if (size === 0) {\n        this.setState({\n          isLoaded: true,\n          hasDataset: false\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          datasetOriginalJSON: result.items[0],\n          datasetUserInput: JSON.stringify(result.items[0]),\n          hasDataset: true\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      datasetUserInput: e.currentTarget.value\n    });\n  }\n  handelSubmit(e) {\n    e.preventDefault();\n    try {\n      const newObj = JSON.parse(this.state.datasetUserInput);\n      console.log(JSON.stringify(newObj));\n\n      // Send Data\n      this.sendData(newObj).then(status => {\n        console.log(status);\n        this.setState({\n          datasetUpdateStatus: status\n        });\n      });\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        datasetUpdateStatus: DatasetUpdateStatus.WrongJSON\n      });\n    }\n  }\n  async sendData(JSONObject) {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify(JSONObject)\n    };\n    const response = await fetch(this.state.serverUrl, requestOptions);\n    if (!response.ok) {\n      return DatasetUpdateStatus.UnableToCreate;\n    }\n    const data = await response.json();\n    return DatasetUpdateStatus.Success;\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      datasetOriginalJSON\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), \"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handelSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"30\",\n              cols: \"50\",\n              onChange: this.handleChange,\n              spellCheck: \"false\",\n              children: JSON.stringify(datasetOriginalJSON)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit Dataset Config JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), DatasetUpdateStatusElement[this.state.datasetUpdateStatus]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default CreateDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","CreateDataset","constructor","props","state","serverUrl","isLoaded","hasDataset","error","datasetOriginalJSON","JSON","datasetUserInput","stringify","datasetUpdateStatus","DatasetUpdateStatus","NoStatus","handleChange","bind","handelSubmit","fetchData","componentDidMount","console","log","response","fetch","ok","Error","result","json","size","items","length","setState","e","preventDefault","currentTarget","value","newObj","parse","sendData","then","status","WrongJSON","JSONObject","requestOptions","method","body","UnableToCreate","data","Success","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","onChange","spellCheck","type","DatasetUpdateStatusElement"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx"],"sourcesContent":["import { Component } from 'react';\n\n\nclass CreateDataset extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: 'http://localhost:5220/dataset',\n            isLoaded: false,\n            hasDataset: false,\n            error: '',\n            datasetOriginalJSON: JSON,\n            datasetUserInput: JSON.stringify(JSON),\n\n            datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n        };\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handelSubmit = this.handelSubmit.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    async fetchData() {\n        console.log(\"Fetch data\")\n\n        try {\n            const response = await fetch(this.state.serverUrl)\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const result = await response.json();\n            const size = result.items.length\n            if (size === 0) {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : false\n                });\n            } else {\n                this.setState({\n                    isLoaded: true,\n                    datasetOriginalJSON: result.items[0],\n                    datasetUserInput: JSON.stringify(result.items[0]),\n                    hasDataset : true\n                });\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    handleChange(e) {\n        e.preventDefault()\n        this.setState(\n            {datasetUserInput : e.currentTarget.value}\n        )\n    }\n\n    handelSubmit(e) {\n        e.preventDefault();\n        try {\n            const newObj = JSON.parse(this.state.datasetUserInput)\n            console.log(JSON.stringify(newObj))\n\n            // Send Data\n            this.sendData(newObj).then(status => {\n                console.log(status)\n                this.setState(\n                    {datasetUpdateStatus: status}\n                )\n            })\n\n        } catch (e) {\n            console.error(e)\n            this.setState(\n                {datasetUpdateStatus: DatasetUpdateStatus.WrongJSON}\n            )\n        }\n    }\n\n\n    async sendData(JSONObject) {\n        // POST request using fetch with async/await\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(JSONObject)\n        };\n        const response = await fetch(this.state.serverUrl, requestOptions);\n        if (!response.ok) {\n            return DatasetUpdateStatus.UnableToCreate\n        }\n\n        const data = await response.json();\n\n        return DatasetUpdateStatus.Success\n    }\n\n    render() {\n        const { error, isLoaded, datasetOriginalJSON} = this.state;\n        if (error) {\n            return  <div className=\"CreateDataset\">\n                        <h2>Create Or Update Dataset</h2>\n                        Error: {error}\n                    </div>;\n        } else if (!isLoaded) {\n            return <div className=\"CreateDataset\">\n                <h2>Create Or Update Dataset</h2>\n                Loading...\n            </div>;\n        } else {\n            return (\n                <div className=\"CreateDataset\">\n                    <h2>Create Or Update Dataset</h2>\n\n                    <form onSubmit={this.handelSubmit}>\n                        <label>\n                            <textarea\n                                rows='30' cols='50' onChange={this.handleChange}\n                                spellCheck='false'\n                            >\n                                {JSON.stringify(datasetOriginalJSON)}\n                                </textarea>\n                        </label>\n                        <input type=\"submit\" value=\"Submit Dataset Config JSON\"/>\n                    </form>\n\n                    {DatasetUpdateStatusElement[this.state.datasetUpdateStatus]}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default CreateDataset"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}