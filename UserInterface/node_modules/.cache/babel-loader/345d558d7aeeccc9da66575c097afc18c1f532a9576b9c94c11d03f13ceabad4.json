{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset-controller.jsx\";\nimport React, { Component } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Dataset from \"../components/dataset/Dataset\";\nimport CreateDataset from \"../components/dataset/CreateDataset\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PanelStatus = {\n  NoStatus: 0,\n  Success: 1,\n  WrongJSON: 2,\n  UnableToCreate: 3\n};\nexport function isJSON(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\nconst PanelStatusElement = [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"success\",\n  children: \"Success!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"warning\",\n  children: \"Unable to Create JSON Object, check input!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"error\",\n  children: \"Unable to Create!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this)];\nclass DatasetController extends Component {\n  constructor(props) {\n    super(props);\n    // handleSendRequest is a func that will call  and update the panel status\n    this.handleSendRequest = (JSONObject, HttpMethod) => {\n      const requestOptions = {\n        method: HttpMethod,\n        body: JSON.stringify(JSONObject)\n      };\n    };\n    //\n    this.handlePanelStatusChange = statusCode => {\n      console.log(statusCode);\n      this.setState({\n        panelStatus: statusCode\n      });\n    };\n    this.handleCreateDataset = stringifyJSON => {\n      try {\n        const newObj = JSON.parse(stringifyJSON);\n        console.log(JSON.stringify(newObj));\n\n        // Send Data\n        this.sendRequest(newObj).then(status => {\n          console.log(status);\n          this.setState({\n            datasetUpdateStatus: status\n          });\n        });\n      } catch (e) {\n        console.error(e);\n        this.setState({\n          datasetUpdateStatus: PanelStatus.WrongJSON\n        });\n      }\n    };\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      hasDataset: false,\n      datasetListJSON: JSON,\n      panelStatus: PanelStatus.NoStatus,\n      error: ''\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      const response = await fetch(this.state.serverUrl);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      if (result.datasets.length === 0) {\n        this.setState({\n          isLoaded: true,\n          hasDataset: false\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          hasDataset: true,\n          datasetListJSON: result.datasets\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      this.setState({\n        error: error\n      });\n    }\n  }\n  // sendRequest is an async func that communicate with api server.\n  async sendRequest(requestOptions) {\n    // POST request using fetch with async/await\n    const response = await fetch(this.state.serverUrl, requestOptions);\n    if (!response.ok) {\n      return PanelStatus.UnableToCreate;\n    }\n    const data = await response.json();\n    return PanelStatus.Success;\n  }\n  render() {\n    const {\n      isLoaded,\n      datasetListJSON\n    } = this.state;\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dataset Controller Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Unable to Connect \", this.state.serverUrl, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this);\n    }\n    const numberOfDataset = datasetListJSON.length;\n    const datasetElements = [];\n    for (let i = 0; i < numberOfDataset; i++) {\n      datasetElements.push( /*#__PURE__*/_jsxDEV(Dataset, {\n        datasetSequence: i,\n        datasetOriginalJSON: datasetListJSON[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dataset Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"There are \", numberOfDataset, \" Datasets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), datasetElements, /*#__PURE__*/_jsxDEV(CreateDataset, {\n        handleCreateDataset: this.handleCreateDataset,\n        handlePanelStatusChange: this.handlePanelStatusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Indicator\",\n        children: PanelStatusElement[this.state.panelStatus]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatasetController;","map":{"version":3,"names":["React","Component","Alert","Dataset","CreateDataset","Fragment","_Fragment","jsxDEV","_jsxDEV","PanelStatus","NoStatus","Success","WrongJSON","UnableToCreate","isJSON","str","JSON","parse","e","PanelStatusElement","variant","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","DatasetController","constructor","props","handleSendRequest","JSONObject","HttpMethod","requestOptions","method","body","stringify","handlePanelStatusChange","statusCode","console","log","setState","panelStatus","handleCreateDataset","stringifyJSON","newObj","sendRequest","then","status","datasetUpdateStatus","error","state","serverUrl","isLoaded","hasDataset","datasetListJSON","fetchData","bind","componentDidMount","response","fetch","ok","Error","result","json","datasets","length","data","render","className","numberOfDataset","datasetElements","i","push","datasetSequence","datasetOriginalJSON"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Dataset from \"../components/dataset/Dataset\";\nimport CreateDataset from \"../components/dataset/CreateDataset\";\n\nexport const PanelStatus =  {\n    NoStatus : 0,\n    Success : 1,\n    WrongJSON : 2,\n    UnableToCreate : 3,\n}\n\nexport function isJSON(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nconst PanelStatusElement = [\n    <></>,\n    <Alert variant=\"outlined\" severity=\"success\">\n        Success!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"warning\">\n        Unable to Create JSON Object, check input!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"error\">\n        Unable to Create!\n    </Alert>\n]\n\nclass DatasetController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: 'http://localhost:5220/dataset',\n            isLoaded: false,\n\n            hasDataset: false,\n            datasetListJSON: JSON,\n\n            panelStatus: PanelStatus.NoStatus,\n            error: '',\n        };\n\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    async fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            const response = await fetch(this.state.serverUrl)\n            if (!response.ok) { throw new Error('Network response was not ok');}\n\n            const result = await response.json();\n            if (result.datasets.length === 0) {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : false\n                });\n            } else {\n                this.setState({\n                    isLoaded: true,\n                    hasDataset : true,\n                    datasetListJSON : result.datasets,\n                });\n            }\n        } catch (error) {\n            console.error(error);\n            this.setState({\n                error: error\n            });\n        }\n    }\n\n\n    // handleSendRequest is a func that will call  and update the panel status\n    handleSendRequest = (JSONObject, HttpMethod) =>  {\n        const requestOptions = {\n            method: HttpMethod,\n            body: JSON.stringify(JSONObject)\n        };\n\n        \n    }\n\n\n    // sendRequest is an async func that communicate with api server.\n    async sendRequest(requestOptions) {\n        // POST request using fetch with async/await\n        const response = await fetch(this.state.serverUrl, requestOptions);\n        if (!response.ok) {\n            return PanelStatus.UnableToCreate\n        }\n        const data = await response.json();\n        return PanelStatus.Success\n    }\n\n    //\n    handlePanelStatusChange = (statusCode) => {\n        console.log(statusCode)\n        this.setState({\n            panelStatus : statusCode,\n        })\n    }\n\n    handleCreateDataset = (stringifyJSON) => {\n        try {\n            const newObj = JSON.parse(stringifyJSON)\n            console.log(JSON.stringify(newObj))\n\n            // Send Data\n            this.sendRequest(newObj).then(status => {\n                console.log(status)\n                this.setState(\n                    {datasetUpdateStatus: status}\n                )\n            })\n\n        } catch (e) {\n            console.error(e)\n            this.setState(\n                {datasetUpdateStatus: PanelStatus.WrongJSON}\n            )\n        }\n    };\n\n    render() {\n        const {isLoaded, datasetListJSON} = this.state\n\n        if (!isLoaded) {\n            return (\n                <div className=\"Dataset\">\n                    <h1>Dataset Controller Panel</h1>\n                    <br/>\n                    <h2>Unable to Connect {this.state.serverUrl}...</h2>\n                </div>\n            );\n        }\n\n        const numberOfDataset = datasetListJSON.length\n        const datasetElements = [];\n        for (let i = 0; i < numberOfDataset; i++) {\n            datasetElements.push(\n                <Dataset key={i} datasetSequence={i} datasetOriginalJSON={datasetListJSON[i]}/>\n            );\n        }\n\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Controller Panel</h1>\n\n                <h2>There are {numberOfDataset} Datasets</h2>\n\n                {datasetElements}\n\n                <CreateDataset\n                    handleCreateDataset={this.handleCreateDataset}\n                    handlePanelStatusChange={this.handlePanelStatusChange}\n                />\n\n                <div className=\"Indicator\">\n                    {PanelStatusElement[this.state.panelStatus]}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DatasetController;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,aAAa,MAAM,qCAAqC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,WAAW,GAAI;EACxBC,QAAQ,EAAG,CAAC;EACZC,OAAO,EAAG,CAAC;EACXC,SAAS,EAAG,CAAC;EACbC,cAAc,EAAG;AACrB,CAAC;AAED,OAAO,SAASC,MAAMA,CAACC,GAAG,EAAE;EACxB,IAAI;IACAC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;EACnB,CAAC,CAAC,OAAOG,CAAC,EAAE;IACR,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AAEA,MAAMC,kBAAkB,GAAG,cACvBX,OAAA,CAAAF,SAAA,mBAAI,CAAC,eACLE,OAAA,CAACN,KAAK;EAACkB,OAAO,EAAC,UAAU;EAACC,QAAQ,EAAC,SAAS;EAAAC,QAAA,EAAC;AAE7C;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC,eACRlB,OAAA,CAACN,KAAK;EAACkB,OAAO,EAAC,UAAU;EAACC,QAAQ,EAAC,SAAS;EAAAC,QAAA,EAAC;AAE7C;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC,eACRlB,OAAA,CAACN,KAAK;EAACkB,OAAO,EAAC,UAAU;EAACC,QAAQ,EAAC,OAAO;EAAAC,QAAA,EAAC;AAE3C;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC,CACX;AAED,MAAMC,iBAAiB,SAAS1B,SAAS,CAAC;EACtC2B,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IA+ChB;IAAA,KACAC,iBAAiB,GAAG,CAACC,UAAU,EAAEC,UAAU,KAAM;MAC7C,MAAMC,cAAc,GAAG;QACnBC,MAAM,EAAEF,UAAU;QAClBG,IAAI,EAAEnB,IAAI,CAACoB,SAAS,CAACL,UAAU;MACnC,CAAC;IAGL,CAAC;IAcD;IAAA,KACAM,uBAAuB,GAAIC,UAAU,IAAK;MACtCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvB,IAAI,CAACG,QAAQ,CAAC;QACVC,WAAW,EAAGJ;MAClB,CAAC,CAAC;IACN,CAAC;IAAA,KAEDK,mBAAmB,GAAIC,aAAa,IAAK;MACrC,IAAI;QACA,MAAMC,MAAM,GAAG7B,IAAI,CAACC,KAAK,CAAC2B,aAAa,CAAC;QACxCL,OAAO,CAACC,GAAG,CAACxB,IAAI,CAACoB,SAAS,CAACS,MAAM,CAAC,CAAC;;QAEnC;QACA,IAAI,CAACC,WAAW,CAACD,MAAM,CAAC,CAACE,IAAI,CAACC,MAAM,IAAI;UACpCT,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;UACnB,IAAI,CAACP,QAAQ,CACT;YAACQ,mBAAmB,EAAED;UAAM,CAChC,CAAC;QACL,CAAC,CAAC;MAEN,CAAC,CAAC,OAAO9B,CAAC,EAAE;QACRqB,OAAO,CAACW,KAAK,CAAChC,CAAC,CAAC;QAChB,IAAI,CAACuB,QAAQ,CACT;UAACQ,mBAAmB,EAAExC,WAAW,CAACG;QAAS,CAC/C,CAAC;MACL;IACJ,CAAC;IA/FG,IAAI,CAACuC,KAAK,GAAG;MACTC,SAAS,EAAE,+BAA+B;MAC1CC,QAAQ,EAAE,KAAK;MAEfC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAEvC,IAAI;MAErB0B,WAAW,EAAEjC,WAAW,CAACC,QAAQ;MACjCwC,KAAK,EAAE;IACX,CAAC;IAED,IAAI,CAACM,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9C;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACF,SAAS,CAAC,CAAC;EACpB;EAEA,MAAMA,SAASA,CAAA,EAAG;IACdjB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,IAAI;MACA,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACT,KAAK,CAACC,SAAS,CAAC;MAClD,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAAC;MAEnE,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;QAC9B,IAAI,CAACzB,QAAQ,CAAC;UACVY,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAG;QACjB,CAAC,CAAC;MACN,CAAC,MAAM;QACH,IAAI,CAACb,QAAQ,CAAC;UACVY,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAG,IAAI;UACjBC,eAAe,EAAGQ,MAAM,CAACE;QAC7B,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAACA,KAAK,CAAC;MACpB,IAAI,CAACT,QAAQ,CAAC;QACVS,KAAK,EAAEA;MACX,CAAC,CAAC;IACN;EACJ;EAcA;EACA,MAAMJ,WAAWA,CAACb,cAAc,EAAE;IAC9B;IACA,MAAM0B,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACT,KAAK,CAACC,SAAS,EAAEnB,cAAc,CAAC;IAClE,IAAI,CAAC0B,QAAQ,CAACE,EAAE,EAAE;MACd,OAAOpD,WAAW,CAACI,cAAc;IACrC;IACA,MAAMsD,IAAI,GAAG,MAAMR,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOvD,WAAW,CAACE,OAAO;EAC9B;EA+BAyD,MAAMA,CAAA,EAAG;IACL,MAAM;MAACf,QAAQ;MAAEE;IAAe,CAAC,GAAG,IAAI,CAACJ,KAAK;IAE9C,IAAI,CAACE,QAAQ,EAAE;MACX,oBACI7C,OAAA;QAAK6D,SAAS,EAAC,SAAS;QAAA/C,QAAA,gBACpBd,OAAA;UAAAc,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjClB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLlB,OAAA;UAAAc,QAAA,GAAI,oBAAkB,EAAC,IAAI,CAAC6B,KAAK,CAACC,SAAS,EAAC,KAAG;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAEd;IAEA,MAAM4C,eAAe,GAAGf,eAAe,CAACW,MAAM;IAC9C,MAAMK,eAAe,GAAG,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,eAAe,EAAEE,CAAC,EAAE,EAAE;MACtCD,eAAe,CAACE,IAAI,eAChBjE,OAAA,CAACL,OAAO;QAASuE,eAAe,EAAEF,CAAE;QAACG,mBAAmB,EAAEpB,eAAe,CAACiB,CAAC;MAAE,GAA/DA,CAAC;QAAAjD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+D,CAClF,CAAC;IACL;IAEA,oBACIlB,OAAA;MAAK6D,SAAS,EAAC,SAAS;MAAA/C,QAAA,gBACpBd,OAAA;QAAAc,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjClB,OAAA;QAAAc,QAAA,GAAI,YAAU,EAACgD,eAAe,EAAC,WAAS;MAAA;QAAA/C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE5C6C,eAAe,eAEhB/D,OAAA,CAACJ,aAAa;QACVuC,mBAAmB,EAAE,IAAI,CAACA,mBAAoB;QAC9CN,uBAAuB,EAAE,IAAI,CAACA;MAAwB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAEFlB,OAAA;QAAK6D,SAAS,EAAC,WAAW;QAAA/C,QAAA,EACrBH,kBAAkB,CAAC,IAAI,CAACgC,KAAK,CAACT,WAAW;MAAC;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAEA,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}