{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatasetUpdateStatus = {\n  NoStatus: 0,\n  Success: 1,\n  WrongJSON: 2,\n  UnableToCreate: 3\n};\nconst DatasetUpdateStatusElement = [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"success\",\n  children: \"Success!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"warning\",\n  children: \"Unable to Create JSON Object, check input!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Alert, {\n  variant: \"outlined\",\n  severity: \"error\",\n  children: \"Unable to Create!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this)];\nclass CreateDataset extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      hasDataset: false,\n      error: '',\n      datasetOriginalJSON: JSON,\n      datasetUserInput: JSON.stringify(JSON),\n      datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  async fetchData() {\n    console.log(\"Fetch data\");\n    const response = await fetch(this.state.serverUrl);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const result = await response.json();\n    const size = result.items.length;\n    if (size === 0) {\n      this.setState({\n        isLoaded: true,\n        hasDataset: false\n      });\n    } else {\n      this.setState({\n        isLoaded: true,\n        datasetOriginalJSON: result.items[0],\n        datasetUserInput: JSON.stringify(result.items[0]),\n        hasDataset: true\n      });\n    }\n\n    // try {\n    //     fetch(this.state.serverUrl)\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 const size = result.items.length\n    //                 if (size === 0) {\n    //                     this.setState({\n    //                         isLoaded: true,\n    //                         hasDataset : false\n    //                     });\n    //                 } else {\n    //                     this.setState({\n    //                         isLoaded: true,\n    //                         datasetOriginalJSON: result.items[0],\n    //                         datasetUserInput: JSON.stringify(result.items[0]),\n    //                         hasDataset : true\n    //                     });\n    //                 }\n    //             },\n    //             (error) => {\n    //                 this.setState({\n    //                     isLoaded: false,\n    //                     error\n    //                 });\n    //             }\n    //         )\n    // } catch (error) {\n    //     console.error(error);\n    // }\n  }\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      datasetUserInput: e.currentTarget.value\n    });\n  }\n  handelSubmit(e) {\n    e.preventDefault();\n    try {\n      const newObj = JSON.parse(this.state.datasetUserInput);\n      console.log(JSON.stringify(newObj));\n\n      // Send Data\n      this.sendData(newObj).then(status => {\n        console.log(status);\n        this.setState({\n          datasetUpdateStatus: status\n        });\n      });\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        datasetUpdateStatus: DatasetUpdateStatus.WrongJSON\n      });\n    }\n  }\n  async sendData(JSONObject) {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify(JSONObject)\n    };\n    const response = await fetch(this.state.serverUrl, requestOptions);\n    if (!response.ok) {\n      return DatasetUpdateStatus.UnableToCreate;\n    }\n    const data = await response.json();\n    return DatasetUpdateStatus.Success;\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      datasetOriginalJSON\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), \"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Or Update Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handelSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"30\",\n              cols: \"50\",\n              onChange: this.handleChange,\n              spellCheck: \"false\",\n              children: JSON.stringify(datasetOriginalJSON)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit Dataset Config JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), DatasetUpdateStatusElement[this.state.datasetUpdateStatus]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default CreateDataset;","map":{"version":3,"names":["Component","useEffect","Alert","Stack","Fragment","_Fragment","jsxDEV","_jsxDEV","DatasetUpdateStatus","NoStatus","Success","WrongJSON","UnableToCreate","DatasetUpdateStatusElement","variant","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","CreateDataset","constructor","props","state","serverUrl","isLoaded","hasDataset","error","datasetOriginalJSON","JSON","datasetUserInput","stringify","datasetUpdateStatus","handleChange","bind","handelSubmit","fetchData","componentDidMount","console","log","response","fetch","ok","Error","result","json","size","items","length","setState","e","preventDefault","currentTarget","value","newObj","parse","sendData","then","status","JSONObject","requestOptions","method","body","data","render","className","onSubmit","rows","cols","onChange","spellCheck","type"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { useEffect } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nconst DatasetUpdateStatus =  {\n    NoStatus : 0,\n    Success : 1,\n    WrongJSON : 2,\n    UnableToCreate : 3,\n}\n\nconst DatasetUpdateStatusElement = [\n    <></>,\n    <Alert variant=\"outlined\" severity=\"success\">\n        Success!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"warning\">\n        Unable to Create JSON Object, check input!\n    </Alert>,\n    <Alert variant=\"outlined\" severity=\"error\">\n        Unable to Create!\n    </Alert>\n]\n\nclass CreateDataset extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: 'http://localhost:5220/dataset',\n            isLoaded: false,\n            hasDataset: false,\n            error: '',\n            datasetOriginalJSON: JSON,\n            datasetUserInput: JSON.stringify(JSON),\n\n            datasetUpdateStatus: DatasetUpdateStatus.NoStatus\n        };\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handelSubmit = this.handelSubmit.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n\n\n\n    async fetchData() {\n\n        console.log(\"Fetch data\")\n\n        const response = await fetch(this.state.serverUrl)\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const result = await response.json();\n\n        const size = result.items.length\n        if (size === 0) {\n            this.setState({\n                isLoaded: true,\n                hasDataset : false\n            });\n        } else {\n            this.setState({\n                isLoaded: true,\n                datasetOriginalJSON: result.items[0],\n                datasetUserInput: JSON.stringify(result.items[0]),\n                hasDataset : true\n            });\n        }\n\n        // try {\n        //     fetch(this.state.serverUrl)\n        //         .then(res => res.json())\n        //         .then(\n        //             (result) => {\n        //                 const size = result.items.length\n        //                 if (size === 0) {\n        //                     this.setState({\n        //                         isLoaded: true,\n        //                         hasDataset : false\n        //                     });\n        //                 } else {\n        //                     this.setState({\n        //                         isLoaded: true,\n        //                         datasetOriginalJSON: result.items[0],\n        //                         datasetUserInput: JSON.stringify(result.items[0]),\n        //                         hasDataset : true\n        //                     });\n        //                 }\n        //             },\n        //             (error) => {\n        //                 this.setState({\n        //                     isLoaded: false,\n        //                     error\n        //                 });\n        //             }\n        //         )\n        // } catch (error) {\n        //     console.error(error);\n        // }\n    }\n\n\n    handleChange(e) {\n        e.preventDefault()\n        this.setState(\n            {datasetUserInput : e.currentTarget.value}\n        )\n    }\n\n    handelSubmit(e) {\n        e.preventDefault();\n        try {\n            const newObj = JSON.parse(this.state.datasetUserInput)\n            console.log(JSON.stringify(newObj))\n\n            // Send Data\n            this.sendData(newObj).then(status => {\n                console.log(status)\n                this.setState(\n                    {datasetUpdateStatus: status}\n                )\n            })\n\n        } catch (e) {\n            console.error(e)\n            this.setState(\n                {datasetUpdateStatus: DatasetUpdateStatus.WrongJSON}\n            )\n        }\n    }\n\n\n    async sendData(JSONObject) {\n        // POST request using fetch with async/await\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify(JSONObject)\n        };\n        const response = await fetch(this.state.serverUrl, requestOptions);\n        if (!response.ok) {\n            return DatasetUpdateStatus.UnableToCreate\n        }\n\n        const data = await response.json();\n\n        return DatasetUpdateStatus.Success\n    }\n\n    render() {\n        const { error, isLoaded, datasetOriginalJSON} = this.state;\n        if (error) {\n            return  <div className=\"CreateDataset\">\n                        <h2>Create Or Update Dataset</h2>\n                        Error: {error}\n                    </div>;\n        } else if (!isLoaded) {\n            return <div className=\"CreateDataset\">\n                <h2>Create Or Update Dataset</h2>\n                Loading...\n            </div>;\n        } else {\n            return (\n                <div className=\"CreateDataset\">\n                    <h2>Create Or Update Dataset</h2>\n\n                    <form onSubmit={this.handelSubmit}>\n                        <label>\n                            <textarea\n                                rows='30' cols='50' onChange={this.handleChange}\n                                spellCheck='false'\n                            >\n                                {JSON.stringify(datasetOriginalJSON)}\n                                </textarea>\n                        </label>\n                        <input type=\"submit\" value=\"Submit Dataset Config JSON\"/>\n                    </form>\n\n                    {DatasetUpdateStatusElement[this.state.datasetUpdateStatus]}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default CreateDataset"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}