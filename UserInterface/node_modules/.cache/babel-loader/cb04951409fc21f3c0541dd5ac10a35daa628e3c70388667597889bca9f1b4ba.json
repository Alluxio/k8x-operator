{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/dataset-controller.jsx\";\nimport React, { Component } from 'react';\nimport CreateObject from \"../util/CreateObject\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport { AlertMethod } from \"../components/alert/Alert\";\nimport { sendRequest, getRequest, convertInputToStringifyJSON, DataType } from \"../util/util\";\nimport yaml from 'js-yaml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverUrl = '/api/dataset';\nclass DatasetController extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGetRequest = () => {\n      // Call getRequest\n      getRequest(serverUrl).then(statusCodeAndMsg => {\n        if (statusCodeAndMsg[0] === AlertMethod.Success) {\n          const numberOfDataset = statusCodeAndMsg[2]['datasets'].length;\n          const newDatasetList = [];\n          for (let i = 0; i < numberOfDataset; i++) {\n            newDatasetList.push(statusCodeAndMsg[2]['datasets'][i]);\n          }\n          this.setState({\n            datasetList: newDatasetList\n          });\n        } else {\n          this.setState({\n            alertMethod: statusCodeAndMsg[0],\n            alertMessage: statusCodeAndMsg[1]\n          });\n        }\n      });\n    };\n    // handleSendRequest is a func that will call  and update the panel status\n    this.handleSendRequest = (httpMethod, dataType, inputData) => {\n      let stringifyJSON = '';\n      if (dataType === DataType.YAMLString) {\n        try {\n          // const parsedYaml = yaml.load(inputData);\n          // stringifyJSON = JSON.stringify(parsedYaml, null, 2);\n          stringifyJSON = convertInputToStringifyJSON(dataType, inputData);\n        } catch (error) {\n          this.setState({\n            alertMethod: AlertMethod.Warning,\n            alertMessage: 'This is not a Valid Input: ' + error\n          });\n          return;\n        }\n      }\n      if (dataType === DataType.JSONObject) {\n        stringifyJSON = JSON.stringify(inputData);\n      }\n\n      // Prep Http request\n      const requestOptions = {\n        method: httpMethod,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: stringifyJSON\n      };\n\n      // Call sendRequest\n      sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n        this.setState({\n          alertMethod: statusCodeAndMsg[0],\n          alertMessage: statusCodeAndMsg[1]\n        });\n      });\n    };\n    this.handleCleanAlertStatus = () => {\n      this.setState({\n        alertMethod: AlertMethod.NoStatus,\n        alertMessage: ''\n      });\n    };\n    this.state = {\n      datasetList: [],\n      alertMethod: AlertMethod.NoStatus,\n      alertMessage: ''\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleGetRequest();\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dataset Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateObject, {\n        objectKind: 'Dataset',\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Datasets, {\n        datasetList: this.state.datasetList,\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperatorAlert, {\n        alertMethod: this.state.alertMethod,\n        alertMessage: this.state.alertMessage,\n        handleCleanAlertStatus: this.handleCleanAlertStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatasetController;","map":{"version":3,"names":["React","Component","CreateObject","Datasets","OperatorAlert","AlertMethod","sendRequest","getRequest","convertInputToStringifyJSON","DataType","yaml","jsxDEV","_jsxDEV","serverUrl","DatasetController","constructor","props","handleGetRequest","then","statusCodeAndMsg","Success","numberOfDataset","length","newDatasetList","i","push","setState","datasetList","alertMethod","alertMessage","handleSendRequest","httpMethod","dataType","inputData","stringifyJSON","YAMLString","error","Warning","JSONObject","JSON","stringify","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","state","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","objectKind"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/dataset-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CreateObject from \"../util/CreateObject\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest, getRequest, convertInputToStringifyJSON, DataType} from \"../util/util\";\nimport yaml from 'js-yaml';\n\nconst serverUrl = '/api/dataset'\n\nclass DatasetController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datasetList: [],\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                const numberOfDataset = statusCodeAndMsg[2]['datasets'].length\n                const newDatasetList = [];\n                for (let i = 0; i < numberOfDataset; i++) {\n                    newDatasetList.push(statusCodeAndMsg[2]['datasets'][i])\n                }\n\n                this.setState({datasetList : newDatasetList})\n\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call  and update the panel status\n    handleSendRequest = (httpMethod, dataType, inputData) =>  {\n        let stringifyJSON = ''\n        if (dataType === DataType.YAMLString) {\n            try {\n                // const parsedYaml = yaml.load(inputData);\n                // stringifyJSON = JSON.stringify(parsedYaml, null, 2);\n                stringifyJSON = convertInputToStringifyJSON(dataType, inputData)\n\n            } catch (error) {\n                this.setState({\n                    alertMethod : AlertMethod.Warning,\n                    alertMessage: 'This is not a Valid Input: ' + error,\n                })\n                return\n            }\n        }\n        if (dataType === DataType.JSONObject) {\n            stringifyJSON = JSON.stringify(inputData)\n        }\n\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Controller Panel</h1>\n                <br/>\n                <CreateObject\n                    objectKind={'Dataset'}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <Datasets\n                    datasetList={this.state.datasetList}\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatasetController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}