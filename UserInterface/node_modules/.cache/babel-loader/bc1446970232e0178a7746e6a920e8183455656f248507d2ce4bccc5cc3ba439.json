{"ast":null,"code":"import { AlertMethod } from \"./alert/Alert\";\nexport const FetchHeaders = {\n  'Content-Type': 'application/json'\n};\n\n// sendRequest is an async func that communicate with api server.\nexport async function sendRequest(requestOptions, serverUrl) {\n  // POST request using fetch with async/await\n  try {\n    const response = await fetch(serverUrl, requestOptions);\n    if (!response.ok) {\n      return [AlertMethod.Error, 'The Operator API returns not OK Response.'];\n    }\n    const data = response.status;\n    console.log(response);\n    console.log(JSON.stringify(data));\n    return [AlertMethod.Success, 'Success!'];\n  } catch (error) {\n    console.log(error);\n    return [AlertMethod.Error, error.toString()];\n  }\n}\nexport async function getRequest(serverUrl) {\n  try {\n    const response = await fetch(serverUrl);\n    if (!response.ok) {\n      return [AlertMethod.Error, 'The Operator API returns not OK Response.'];\n    }\n    const result = await response.json();\n    return [AlertMethod.Success, 'Success!', result];\n  } catch (error) {\n    console.log(error);\n    return [AlertMethod.Error, error.toString()];\n  }\n}","map":{"version":3,"names":["AlertMethod","FetchHeaders","sendRequest","requestOptions","serverUrl","response","fetch","ok","Error","data","status","console","log","JSON","stringify","Success","error","toString","getRequest","result","json"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/util.jsx"],"sourcesContent":["import {AlertMethod} from \"./alert/Alert\";\n\nexport const FetchHeaders = {'Content-Type':'application/json'}\n\n\n// sendRequest is an async func that communicate with api server.\nexport async function sendRequest(requestOptions, serverUrl) {\n    // POST request using fetch with async/await\n    try {\n        const response = await fetch(serverUrl, requestOptions);\n        if (!response.ok) {\n            return [AlertMethod.Error, 'The Operator API returns not OK Response.'];\n        }\n\n        const data = response.status;\n        console.log(response);\n        console.log(JSON.stringify(data));\n        return [AlertMethod.Success, 'Success!'];\n    } catch (error) {\n        console.log(error);\n        return [AlertMethod.Error, error.toString()];\n    }\n}\n\n\nexport async function getRequest(serverUrl){\n    try {\n        const response = await fetch(serverUrl);\n        if (!response.ok) {\n            return [AlertMethod.Error, 'The Operator API returns not OK Response.'];\n        }\n\n        const result = await response.json();\n        return [AlertMethod.Success, 'Success!', result];\n    } catch (error) {\n        console.log(error);\n        return [AlertMethod.Error, error.toString()];\n    }\n}\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,eAAe;AAEzC,OAAO,MAAMC,YAAY,GAAG;EAAC,cAAc,EAAC;AAAkB,CAAC;;AAG/D;AACA,OAAO,eAAeC,WAAWA,CAACC,cAAc,EAAEC,SAAS,EAAE;EACzD;EACA,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,EAAED,cAAc,CAAC;IACvD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO,CAACP,WAAW,CAACQ,KAAK,EAAE,2CAA2C,CAAC;IAC3E;IAEA,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACrBM,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IACjC,OAAO,CAACT,WAAW,CAACe,OAAO,EAAE,UAAU,CAAC;EAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IAClB,OAAO,CAAChB,WAAW,CAACQ,KAAK,EAAEQ,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAChD;AACJ;AAGA,OAAO,eAAeC,UAAUA,CAACd,SAAS,EAAC;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,CAAC;IACvC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO,CAACP,WAAW,CAACQ,KAAK,EAAE,2CAA2C,CAAC;IAC3E;IAEA,MAAMW,MAAM,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IACpC,OAAO,CAACpB,WAAW,CAACe,OAAO,EAAE,UAAU,EAAEI,MAAM,CAAC;EACpD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IAClB,OAAO,CAAChB,WAAW,CAACQ,KAAK,EAAEQ,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAChD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}