{"ast":null,"code":"import React,{Component}from'react';import OperatorAlert from\"../components/alert/Alert\";import{AlertMethod}from\"../components/alert/Alert\";import{sendRequest,YAMLtoJSON,getRequest,isJSONString}from\"../util/util\";import AlluxioClusters from\"../components/alluxio_cluster/AlluxioClusters\";import CreateObject from\"../util/CreateObject\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const serverUrl='/api/alluxio_cluster';class AlluxioController extends Component{constructor(props){super(props);this.handleGetRequest=()=>{// Call getRequest\ngetRequest(serverUrl).then(statusCodeAndMsg=>{if(statusCodeAndMsg[0]===AlertMethod.Success){const numberOfAlluxio=statusCodeAndMsg[2]['alluxio-clusters'].length;const newAlluxioList=[];for(let i=0;i<numberOfAlluxio;i++){newAlluxioList.push(statusCodeAndMsg[2]['alluxio-clusters'][i]);}this.setState({alluxioList:newAlluxioList});}else{this.setState({alertMethod:statusCodeAndMsg[0],alertMessage:statusCodeAndMsg[1]});}});};// handleSendRequest is a func that will call sendRequest() and update the panel status\nthis.handleSendRequest=(stringifyYAML,httpMethod)=>{const stringifyJSON=YAMLtoJSON(stringifyYAML);// Check the str is JSON or not\nif(!isJSONString(stringifyJSON)){this.setState({alertMethod:AlertMethod.Warning,alertMessage:'This is not a Valid Input'});return;}// Prep Http request\nconst requestOptions={method:httpMethod,headers:{'Content-Type':'application/json'},body:stringifyJSON};// Call sendRequest\nsendRequest(requestOptions,serverUrl).then(statusCodeAndMsg=>{this.setState({alertMethod:statusCodeAndMsg[0],alertMessage:statusCodeAndMsg[1]});});};this.handleCleanAlertStatus=()=>{this.setState({alertMethod:AlertMethod.NoStatus,alertMessage:''});};this.state={alluxioList:[],alertMethod:AlertMethod.NoStatus,alertMessage:''};}componentDidMount(){this.interval=setInterval(()=>{this.handleGetRequest();},2000);}componentWillUnmount(){clearInterval(this.interval);}render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Alluxio\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Alluxio Controller Panel\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(CreateObject,{objectKind:'Alluxio Cluster',handleSendRequest:this.handleSendRequest}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(AlluxioClusters,{alluxioList:this.state.alluxioList,handleSendRequest:this.handleSendRequest}),/*#__PURE__*/_jsx(OperatorAlert,{alertMethod:this.state.alertMethod,alertMessage:this.state.alertMessage,handleCleanAlertStatus:this.handleCleanAlertStatus})]});}}export default AlluxioController;","map":{"version":3,"names":["React","Component","OperatorAlert","AlertMethod","sendRequest","YAMLtoJSON","getRequest","isJSONString","AlluxioClusters","CreateObject","jsx","_jsx","jsxs","_jsxs","serverUrl","AlluxioController","constructor","props","handleGetRequest","then","statusCodeAndMsg","Success","numberOfAlluxio","length","newAlluxioList","i","push","setState","alluxioList","alertMethod","alertMessage","handleSendRequest","stringifyYAML","httpMethod","stringifyJSON","Warning","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","state","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","objectKind"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/alluxio-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest, YAMLtoJSON, getRequest, isJSONString} from \"../util/util\";\nimport AlluxioClusters from \"../components/alluxio_cluster/AlluxioClusters\";\nimport CreateObject from \"../util/CreateObject\";\n\nconst serverUrl = '/api/alluxio_cluster'\n\nclass AlluxioController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            alluxioList: [],\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                const numberOfAlluxio = statusCodeAndMsg[2]['alluxio-clusters'].length\n                const newAlluxioList = [];\n                for (let i = 0; i < numberOfAlluxio; i++) {\n                    newAlluxioList.push(statusCodeAndMsg[2]['alluxio-clusters'][i])\n                }\n\n                this.setState({alluxioList: newAlluxioList})\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call sendRequest() and update the panel status\n    handleSendRequest = (stringifyYAML, httpMethod) =>  {\n        const stringifyJSON = YAMLtoJSON(stringifyYAML)\n\n        // Check the str is JSON or not\n        if (!isJSONString(stringifyJSON)) {\n            this.setState({\n                alertMethod : AlertMethod.Warning,\n                alertMessage: 'This is not a Valid Input',\n            })\n            return\n        }\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Alluxio\">\n                <h1>Alluxio Controller Panel</h1>\n                <br/>\n                <CreateObject\n                    objectKind={'Alluxio Cluster'}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <AlluxioClusters\n                    alluxioList={this.state.alluxioList}\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default AlluxioController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}