{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalDatasetObject = {\n  name: '',\n  path: ''\n};\nclass GetDataset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      dataset: initalDatasetObject,\n      isLoaded: false,\n      error: '',\n      stringifiesJSON: JSON\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData() {\n    console.log(\"Fetch data\");\n    fetch(this.state.serverUrl).then(res => res.json()).then(result => {\n      console.log(result.items[0]);\n      let newStatusMap = new Map();\n      newStatusMap.set(\"boundedAlluxioCluster\", result.items[0].status.boundedAlluxioCluster);\n      newStatusMap.set(\"phase\", result.items[0].status.phase);\n      let currentDatasetObject = {\n        name: result.items[0].name,\n        path: result.items[0].path,\n        status: newStatusMap\n      };\n      this.setState({\n        isLoaded: true,\n        dataset: currentDatasetObject,\n        stringifiesJSON: result.items[0].toJSON\n      });\n    }, error => {\n      this.setState({\n        isLoaded: false,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      dataset\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    } else {\n      var _dataset$status, _dataset$status2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), dataset.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Path\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), dataset.path]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"boundedAlluxioCluster: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), (_dataset$status = dataset.status) === null || _dataset$status === void 0 ? void 0 : _dataset$status.get('boundedAlluxioCluster'), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"phase: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), (_dataset$status2 = dataset.status) === null || _dataset$status2 === void 0 ? void 0 : _dataset$status2.get('phase')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default GetDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","initalDatasetObject","name","path","GetDataset","constructor","args","state","serverUrl","dataset","isLoaded","error","stringifiesJSON","JSON","componentDidMount","fetchData","console","log","fetch","then","res","json","result","items","newStatusMap","Map","set","status","boundedAlluxioCluster","phase","currentDatasetObject","setState","toJSON","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_dataset$status","_dataset$status2","get"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx"],"sourcesContent":["import { Component } from 'react';\nimport dataset from \"../../pages/dataset\";\n\ninterface Dataset {\n    name: string,\n    path: string,\n    credentials?: Map<string, string>\n    status?: Map<string, string>\n}\nconst initalDatasetObject : Dataset = {\n    name: '',\n    path: '',\n}\n\nclass GetDataset extends Component {\n    state = {\n        serverUrl: 'http://localhost:5220/dataset',\n        dataset: initalDatasetObject,\n        isLoaded: false,\n        error: '',\n        stringifiesJSON: JSON,\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData() {\n        console.log(\"Fetch data\")\n        fetch(this.state.serverUrl)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result.items[0]);\n\n                    let newStatusMap = new Map<string,string>\n                    newStatusMap.set(\"boundedAlluxioCluster\", result.items[0].status.boundedAlluxioCluster)\n                    newStatusMap.set(\"phase\", result.items[0].status.phase)\n                    let currentDatasetObject: Dataset = {\n                        name : result.items[0].name,\n                        path : result.items[0].path,\n                        status : newStatusMap,\n                    }\n\n                    this.setState({\n                        isLoaded : true,\n                        dataset : currentDatasetObject,\n                        stringifiesJSON: result.items[0].toJSON\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: false,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, dataset} = this.state;\n        if (error) {\n            return <div className=\"GetDataset\">Error: {error}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"GetDataset\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"GetDataset\">\n\n                    <div className='DS Name'>\n                        <h3>Data Set Name:</h3>\n                        {dataset.name}\n                    </div>\n\n                    <div className='DS Path'>\n                        <h3>Data Set Status:</h3>\n                        {dataset.path}\n                    </div>\n\n                    <div className='DS Status'>\n                        <h3>Data Set Status:</h3>\n                        <h4>boundedAlluxioCluster: </h4>\n                        {dataset.status?.get('boundedAlluxioCluster')}\n                        <h4>phase: </h4>\n                        {dataset.status?.get('phase')}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default GetDataset\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}