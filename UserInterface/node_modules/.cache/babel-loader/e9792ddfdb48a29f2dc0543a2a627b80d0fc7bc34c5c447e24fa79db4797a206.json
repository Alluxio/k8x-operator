{"ast":null,"code":"import React,{Component}from'react';import CreateObject from\"../util/CreateObject\";import Datasets from\"../components/dataset/Datasets\";import OperatorAlert from\"../components/alert/Alert\";import{AlertMethod}from\"../components/alert/Alert\";import{sendRequest,getRequest,isJSONString}from\"../util/util\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const serverUrl='/api/dataset';class DatasetController extends Component{constructor(props){super(props);this.handleGetRequest=()=>{// Call getRequest\ngetRequest(serverUrl).then(statusCodeAndMsg=>{if(statusCodeAndMsg[0]===AlertMethod.Success){const numberOfDataset=statusCodeAndMsg[2]['datasets'].length;const newDatasetList=[];for(let i=0;i<numberOfDataset;i++){newDatasetList.push(statusCodeAndMsg[2]['datasets'][i]);}this.setState({datasetList:newDatasetList});}else{this.setState({alertMethod:statusCodeAndMsg[0],alertMessage:statusCodeAndMsg[1]});}});};// handleSendRequest is a func that will call  and update the panel status\nthis.handleSendRequest=(stringifyJSON,httpMethod)=>{// Check the str is JSON or not\nif(!isJSONString(stringifyJSON)){this.setState({alertMethod:AlertMethod.Warning,alertMessage:'This is not a JSON file.'});return;}// Prep Http request\nconst requestOptions={method:httpMethod,headers:{'Content-Type':'application/json'},body:stringifyJSON};// Call sendRequest\nsendRequest(requestOptions,serverUrl).then(statusCodeAndMsg=>{this.setState({alertMethod:statusCodeAndMsg[0],alertMessage:statusCodeAndMsg[1]});});};this.handleCleanAlertStatus=()=>{this.setState({alertMethod:AlertMethod.NoStatus,alertMessage:''});};this.state={datasetList:[],alertMethod:AlertMethod.NoStatus,alertMessage:''};}componentDidMount(){this.interval=setInterval(()=>{this.handleGetRequest();},2000);}componentWillUnmount(){clearInterval(this.interval);}render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Dataset\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dataset Controller Panel\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(CreateObject,{objectKind:'Dataset',handleSendRequest:this.handleSendRequest}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Datasets,{datasetList:this.state.datasetList,handleSendRequest:this.handleSendRequest}),/*#__PURE__*/_jsx(OperatorAlert,{alertMethod:this.state.alertMethod,alertMessage:this.state.alertMessage,handleCleanAlertStatus:this.handleCleanAlertStatus})]});}}export default DatasetController;","map":{"version":3,"names":["React","Component","CreateObject","Datasets","OperatorAlert","AlertMethod","sendRequest","getRequest","isJSONString","jsx","_jsx","jsxs","_jsxs","serverUrl","DatasetController","constructor","props","handleGetRequest","then","statusCodeAndMsg","Success","numberOfDataset","length","newDatasetList","i","push","setState","datasetList","alertMethod","alertMessage","handleSendRequest","stringifyJSON","httpMethod","Warning","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","state","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","objectKind"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/containers/dataset-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CreateObject from \"../util/CreateObject\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest, getRequest, isJSONString} from \"../util/util\";\n\nconst serverUrl = '/api/dataset'\n\nclass DatasetController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            datasetList: [],\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                const numberOfDataset = statusCodeAndMsg[2]['datasets'].length\n                const newDatasetList = [];\n                for (let i = 0; i < numberOfDataset; i++) {\n                    newDatasetList.push(statusCodeAndMsg[2]['datasets'][i])\n                }\n\n                this.setState({datasetList : newDatasetList})\n\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call  and update the panel status\n    handleSendRequest = (stringifyJSON, httpMethod) =>  {\n        // Check the str is JSON or not\n        if (!isJSONString(stringifyJSON)) {\n            this.setState({\n                alertMethod : AlertMethod.Warning,\n                alertMessage: 'This is not a JSON file.',\n            })\n            return\n        }\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Controller Panel</h1>\n                <br/>\n                <CreateObject\n                    objectKind={'Dataset'}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <Datasets\n                    datasetList={this.state.datasetList}\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatasetController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}