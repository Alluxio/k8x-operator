{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/alluxio-controller.jsx\";\nimport React, { Component } from 'react';\nimport OperatorAlert from \"../components/alert/Alert\";\nimport { AlertMethod } from \"../components/alert/Alert\";\nimport { sendRequest, YAMLtoJSON, getRequest, isJSONString } from \"../components/util/util\";\nimport AlluxioClusters from \"../components/alluxio_cluster/AlluxioClusters\";\nimport CreateObject from \"../components/util/CreateObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverUrl = '/api/alluxio_cluster';\nclass AlluxioController extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGetRequest = () => {\n      // Call getRequest\n      getRequest(serverUrl).then(statusCodeAndMsg => {\n        if (statusCodeAndMsg[0] === AlertMethod.Success) {\n          this.setState({\n            alluxioListJSON: statusCodeAndMsg[2]['alluxio-clusters']\n          });\n        } else {\n          this.setState({\n            alertMethod: statusCodeAndMsg[0],\n            alertMessage: statusCodeAndMsg[1]\n          });\n        }\n      });\n    };\n    // handleSendRequest is a func that will call sendRequest() and update the panel status\n    this.handleSendRequest = (stringifyYAML, httpMethod) => {\n      const stringifyJSON = YAMLtoJSON(stringifyYAML);\n\n      // Check the str is JSON or not\n      if (!isJSONString(stringifyJSON)) {\n        this.setState({\n          alertMethod: AlertMethod.Warning,\n          alertMessage: 'This is not a Valid Input'\n        });\n        return;\n      }\n\n      // Prep Http request\n      const requestOptions = {\n        method: httpMethod,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: stringifyJSON\n      };\n\n      // Call sendRequest\n      sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n        this.setState({\n          alertMethod: statusCodeAndMsg[0],\n          alertMessage: statusCodeAndMsg[1]\n        });\n      });\n    };\n    this.handleCleanAlertStatus = () => {\n      this.setState({\n        alertMethod: AlertMethod.NoStatus,\n        alertMessage: ''\n      });\n    };\n    this.state = {\n      alluxioListJSON: JSON,\n      alertMethod: AlertMethod.NoStatus,\n      alertMessage: ''\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleGetRequest();\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      alluxioListJSON\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Alluxio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alluxio Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlluxioClusters, {\n        alluxioListJSON: alluxioListJSON,\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateObject, {\n        objectKind: 'Alluxio Cluster',\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperatorAlert, {\n        alertMethod: this.state.alertMethod,\n        alertMessage: this.state.alertMessage,\n        handleCleanAlertStatus: this.handleCleanAlertStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AlluxioController;","map":{"version":3,"names":["React","Component","OperatorAlert","AlertMethod","sendRequest","YAMLtoJSON","getRequest","isJSONString","AlluxioClusters","CreateObject","jsxDEV","_jsxDEV","serverUrl","AlluxioController","constructor","props","handleGetRequest","then","statusCodeAndMsg","Success","setState","alluxioListJSON","alertMethod","alertMessage","handleSendRequest","stringifyYAML","httpMethod","stringifyJSON","Warning","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","state","JSON","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","objectKind"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/alluxio-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest, YAMLtoJSON, getRequest, isJSONString} from \"../components/util/util\";\nimport AlluxioClusters from \"../components/alluxio_cluster/AlluxioClusters\";\nimport CreateObject from \"../components/util/CreateObject\";\n\nconst serverUrl = '/api/alluxio_cluster'\n\nclass AlluxioController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            alluxioListJSON: JSON,\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                this.setState({\n                    alluxioListJSON: statusCodeAndMsg[2]['alluxio-clusters'],\n                });\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call sendRequest() and update the panel status\n    handleSendRequest = (stringifyYAML, httpMethod) =>  {\n        const stringifyJSON = YAMLtoJSON(stringifyYAML)\n\n        // Check the str is JSON or not\n        if (!isJSONString(stringifyJSON)) {\n            this.setState({\n                alertMethod : AlertMethod.Warning,\n                alertMessage: 'This is not a Valid Input',\n            })\n            return\n        }\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        const {alluxioListJSON} = this.state\n\n        return (\n            <div className=\"Alluxio\">\n                <h1>Alluxio Controller Panel</h1>\n                <br/>\n                <AlluxioClusters\n                    alluxioListJSON={alluxioListJSON}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <CreateObject\n                    objectKind={'Alluxio Cluster'}\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default AlluxioController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}