{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass CreateDataset extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      isLoaded: false,\n      hasDataset: false,\n      error: '',\n      datasetOriginalJSON: JSON,\n      datasetUserInput: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      fetch(this.state.serverUrl).then(res => res.json()).then(result => {\n        const size = result.items.length;\n        if (size === 0) {\n          this.setState({\n            isLoaded: true,\n            datasetOriginalJSON: {},\n            hasDataset: false\n          });\n        } else {\n          this.setState({\n            isLoaded: true,\n            datasetOriginalJSON: result.items[0],\n            hasDataset: true\n          });\n        }\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  handleChange(e) {\n    e.preventDefault();\n    console.log(e.currentTarget.value);\n    this.setState({\n      datasetUserInput: e.currentTarget.value\n    });\n  }\n  handelSubmit(e) {\n    // Prevent the browser from reloading the page\n    e.preventDefault();\n    console.log('You clicked submit.');\n\n    // Read the form data\n    const form = e.target;\n    const formData = new FormData(form);\n    const formJson = Object.fromEntries(formData.entries());\n    console.log(formJson);\n  }\n  render() {\n    let defaultJSONText = JSON.stringify(this.state.datasetOriginalJSON);\n    console.log(defaultJSONText);\n    let testText = defaultJSONText.length;\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Connecting to the Server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Or Update Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DS JSON\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original JSON:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: defaultJSONText\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: testText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"30\",\n        cols: \"50\",\n        onChange: this.handleChange,\n        defaultValue: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handelSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit Dataset Config JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default CreateDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateDataset","constructor","props","state","serverUrl","isLoaded","hasDataset","error","datasetOriginalJSON","JSON","datasetUserInput","handleChange","bind","handelSubmit","fetchData","componentDidMount","console","log","fetch","then","res","json","result","size","items","length","setState","e","preventDefault","currentTarget","value","form","target","formData","FormData","formJson","Object","fromEntries","entries","render","defaultJSONText","stringify","testText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","defaultValue","rows","cols","onChange","onSubmit","type"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/CreateDataset.jsx"],"sourcesContent":["import { Component } from 'react';\n\n\nclass CreateDataset extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: 'http://localhost:5220/dataset',\n            isLoaded: false,\n            hasDataset: false,\n            error: '',\n            datasetOriginalJSON: JSON,\n            datasetUserInput: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handelSubmit = this.handelSubmit.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            fetch(this.state.serverUrl)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        const size = result.items.length\n                        if (size === 0) {\n                            this.setState({\n                                isLoaded: true,\n                                datasetOriginalJSON: {},\n                                hasDataset : false\n                            });\n                        } else {\n                            this.setState({\n                                isLoaded: true,\n                                datasetOriginalJSON: result.items[0],\n                                hasDataset : true\n                            });\n                        }\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: false,\n                            error\n                        });\n                    }\n                )\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    handleChange(e) {\n        e.preventDefault()\n        console.log(e.currentTarget.value)\n\n        this.setState(\n            {datasetUserInput : e.currentTarget.value}\n        )\n    }\n\n    handelSubmit(e) {\n        // Prevent the browser from reloading the page\n        e.preventDefault();\n        console.log('You clicked submit.')\n\n        // Read the form data\n        const form = e.target;\n        const formData = new FormData(form);\n\n        const formJson = Object.fromEntries(formData.entries());\n        console.log(formJson);\n\n    }\n\n    render() {\n        let defaultJSONText = JSON.stringify(this.state.datasetOriginalJSON)\n        console.log(defaultJSONText)\n        let testText = defaultJSONText.length\n\n        if (!this.state.isLoaded) {\n            return (\n                <div>\n                    Connecting to the Server...\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <h2>Create Or Update Dataset</h2>\n\n                <div className='DS JSON'>\n                    <h3>Original JSON:</h3>\n                    <>{defaultJSONText}</>\n                </div>\n\n                <input defaultValue={testText}/>\n\n                <textarea rows='30' cols='50' onChange={this.handleChange} defaultValue={this.state}>\n                </textarea>\n\n                <form onSubmit={this.handelSubmit}>\n                    <label>\n\n                    </label>\n                    <input type=\"submit\" value=\"Submit Dataset Config JSON\"/>\n                </form>\n\n            </div>\n        )\n    }\n\n}\n\nexport default CreateDataset"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}