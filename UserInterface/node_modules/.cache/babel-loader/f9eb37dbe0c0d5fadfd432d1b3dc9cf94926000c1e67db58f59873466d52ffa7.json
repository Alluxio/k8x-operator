{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/Datasets.jsx\";\nimport React, { Component } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Dataset from \"./Dataset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Datasets extends Component {\n  render() {\n    const {\n      datasetListJSON,\n      handleSendRequest\n    } = this.props;\n\n    // const numberOfDataset = datasetListJSON.length\n    // const datasetElements = [];\n    // for (let i = 0; i < numberOfDataset; i++) {\n    //     datasetElements.push(\n    //         <Dataset key={datasetListJSON[i].datasetConfig.name}\n    //                  datasetSequence={i}\n    //                  datasetOriginalJSON={datasetListJSON[i]}\n    //                  handleSendRequest={handleSendRequest}\n    //         />\n    //     );\n    // }\n\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sequence Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Dataset Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Phase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Bounded Alluxio Cluster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Setting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Datasets;","map":{"version":3,"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Dataset","jsxDEV","_jsxDEV","Datasets","render","datasetListJSON","handleSendRequest","props","component","children","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","align"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/Datasets.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Dataset from \"./Dataset\";\n\nclass Datasets extends Component {\n    render() {\n        const {datasetListJSON, handleSendRequest} = this.props\n\n        // const numberOfDataset = datasetListJSON.length\n        // const datasetElements = [];\n        // for (let i = 0; i < numberOfDataset; i++) {\n        //     datasetElements.push(\n        //         <Dataset key={datasetListJSON[i].datasetConfig.name}\n        //                  datasetSequence={i}\n        //                  datasetOriginalJSON={datasetListJSON[i]}\n        //                  handleSendRequest={handleSendRequest}\n        //         />\n        //     );\n        // }\n\n        return (\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Sequence Number</TableCell>\n                            <TableCell align=\"left\">Dataset Name</TableCell>\n                            <TableCell align=\"right\">Phase</TableCell>\n                            <TableCell align=\"right\">Bounded Alluxio Cluster</TableCell>\n                            <TableCell align=\"right\">Setting</TableCell>\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {/*{datasetList.map((dataset, index) => (*/}\n                        {/*    <Dataset*/}\n                        {/*        key={dataset.datasetConfig.name}*/}\n                        {/*        datasetSequence={index}*/}\n                        {/*        datasetOriginalJSON={dataset}*/}\n                        {/*        handleSendRequest={handleSendRequest}*/}\n                        {/*    />*/}\n                        {/*))}*/}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    }\n}\n\nexport default Datasets;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,SAASX,SAAS,CAAC;EAC7BY,MAAMA,CAAA,EAAG;IACL,MAAM;MAACC,eAAe;MAAEC;IAAiB,CAAC,GAAG,IAAI,CAACC,KAAK;;IAEvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,oBACIL,OAAA,CAACN,cAAc;MAACY,SAAS,EAAET,KAAM;MAAAU,QAAA,eAC7BP,OAAA,CAACT,KAAK;QAACiB,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAC,cAAW,cAAc;QAAAF,QAAA,gBACnDP,OAAA,CAACL,SAAS;UAAAY,QAAA,eACNP,OAAA,CAACJ,QAAQ;YAAAW,QAAA,gBACLP,OAAA,CAACP,SAAS;cAAAc,QAAA,EAAC;YAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACtCb,OAAA,CAACP,SAAS;cAACqB,KAAK,EAAC,MAAM;cAAAP,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChDb,OAAA,CAACP,SAAS;cAACqB,KAAK,EAAC,OAAO;cAAAP,QAAA,EAAC;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC1Cb,OAAA,CAACP,SAAS;cAACqB,KAAK,EAAC,OAAO;cAAAP,QAAA,EAAC;YAAuB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC5Db,OAAA,CAACP,SAAS;cAACqB,KAAK,EAAC,OAAO;cAAAP,QAAA,EAAC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEZb,OAAA,CAACR,SAAS;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEzB;AACJ;AAEA,eAAeZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}