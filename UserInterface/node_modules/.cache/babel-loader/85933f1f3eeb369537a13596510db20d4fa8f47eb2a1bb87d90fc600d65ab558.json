{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/alluxio-controller.jsx\";\nimport React, { Component } from 'react';\nimport OperatorAlert from \"../components/alert/Alert\";\nimport { AlertMethod } from \"../components/alert/Alert\";\nimport { sendRequest } from \"../components/util\";\nimport { getRequest } from \"../components/util\";\nimport { isJSONString } from \"../components/util\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport CreateDataset from \"../components/dataset/CreateDataset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlluxioController extends Component {\n  constructor(props) {\n    super(props);\n    // componentWillUnmount() {\n    //     clearInterval(this.interval);\n    // }\n    this.handleGetRequest = () => {\n      // Call getRequest\n      getRequest(this.state.serverUrl).then(statusCodeAndMsg => {\n        if (statusCodeAndMsg[0] === AlertMethod.Success) {\n          this.setState({\n            isLoaded: true,\n            alluxioListJSON: statusCodeAndMsg[2].alluxioclusters\n          });\n          console.log(statusCodeAndMsg[2]);\n        } else {\n          this.setState({\n            alertMethod: statusCodeAndMsg[0],\n            alertMessage: statusCodeAndMsg[1]\n          });\n        }\n      });\n    };\n    this.state = {\n      serverUrl: '/alluxio_cluster',\n      isLoaded: false,\n      alluxioListJSON: JSON,\n      alertMethod: AlertMethod.NoStatus,\n      alertMessage: ''\n    };\n  }\n  componentDidMount() {\n    this.handleGetRequest();\n    // this.interval = setInterval(() => {\n    //\n    // }, 2000);\n  }\n\n  render() {\n    const {\n      isLoaded,\n      alluxioListJSON\n    } = this.state;\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Alluxio\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Alluxio Controller Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Connecting Endpoint: \", this.state.serverUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Alluxio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alluxio Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperatorAlert, {\n        alertMethod: this.state.alertMethod,\n        alertMessage: this.state.alertMessage,\n        handleCleanAlertStatus: this.handleCleanAlertStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AlluxioController;","map":{"version":3,"names":["React","Component","OperatorAlert","AlertMethod","sendRequest","getRequest","isJSONString","Datasets","CreateDataset","jsxDEV","_jsxDEV","AlluxioController","constructor","props","handleGetRequest","state","serverUrl","then","statusCodeAndMsg","Success","setState","isLoaded","alluxioListJSON","alluxioclusters","console","log","alertMethod","alertMessage","JSON","NoStatus","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCleanAlertStatus"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/alluxio-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest} from \"../components/util\";\nimport {getRequest} from \"../components/util\";\nimport {isJSONString} from \"../components/util\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport CreateDataset from \"../components/dataset/CreateDataset\";\n\n\nclass AlluxioController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: '/alluxio_cluster',\n            isLoaded: false,\n\n            alluxioListJSON: JSON,\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.handleGetRequest()\n        // this.interval = setInterval(() => {\n        //\n        // }, 2000);\n    }\n\n    // componentWillUnmount() {\n    //     clearInterval(this.interval);\n    // }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(this.state.serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                this.setState({\n                    isLoaded: true,\n                    alluxioListJSON: statusCodeAndMsg[2].alluxioclusters,\n                });\n                console.log(statusCodeAndMsg[2])\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n\n    render() {\n        const {isLoaded, alluxioListJSON} = this.state\n        if (!isLoaded) {\n            return (\n                <div className=\"Alluxio\">\n                    <h1>Alluxio Controller Panel</h1>\n                    <br/>\n                    <h2>Connecting Endpoint: {this.state.serverUrl}</h2>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"Alluxio\">\n                <h1>Alluxio Controller Panel</h1>\n                <br/>\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default AlluxioController;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,2BAA2B;AACrD,SAAQC,WAAW,QAAO,2BAA2B;AACrD,SAAQC,WAAW,QAAO,oBAAoB;AAC9C,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,aAAa,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,MAAMC,iBAAiB,SAASV,SAAS,CAAC;EACtCW,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAmBhB;IACA;IACA;IAAA,KAEAC,gBAAgB,GAAG,MAAO;MACtB;MACAT,UAAU,CAAC,IAAI,CAACU,KAAK,CAACC,SAAS,CAAC,CAACC,IAAI,CAACC,gBAAgB,IAAI;QACtD,IAAIA,gBAAgB,CAAC,CAAC,CAAC,KAAKf,WAAW,CAACgB,OAAO,EAAE;UAC7C,IAAI,CAACC,QAAQ,CAAC;YACVC,QAAQ,EAAE,IAAI;YACdC,eAAe,EAAEJ,gBAAgB,CAAC,CAAC,CAAC,CAACK;UACzC,CAAC,CAAC;UACFC,OAAO,CAACC,GAAG,CAACP,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,MAAM;UACH,IAAI,CAACE,QAAQ,CAAC;YACVM,WAAW,EAAGR,gBAAgB,CAAC,CAAC,CAAC;YACjCS,YAAY,EAAGT,gBAAgB,CAAC,CAAC;UACrC,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN,CAAC;IAtCG,IAAI,CAACH,KAAK,GAAG;MACTC,SAAS,EAAE,kBAAkB;MAC7BK,QAAQ,EAAE,KAAK;MAEfC,eAAe,EAAEM,IAAI;MAErBF,WAAW,EAAEvB,WAAW,CAAC0B,QAAQ;MACjCF,YAAY,EAAE;IAClB,CAAC;EACL;EAEAG,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAChB,gBAAgB,CAAC,CAAC;IACvB;IACA;IACA;EACJ;;EAyBAiB,MAAMA,CAAA,EAAG;IACL,MAAM;MAACV,QAAQ;MAAEC;IAAe,CAAC,GAAG,IAAI,CAACP,KAAK;IAC9C,IAAI,CAACM,QAAQ,EAAE;MACX,oBACIX,OAAA;QAAKsB,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpBvB,OAAA;UAAAuB,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC3B,OAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL3B,OAAA;UAAAuB,QAAA,GAAI,uBAAqB,EAAC,IAAI,CAAClB,KAAK,CAACC,SAAS;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAEd;IAEA,oBACI3B,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBvB,OAAA;QAAAuB,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC3B,OAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEL3B,OAAA,CAACR,aAAa;QAACwB,WAAW,EAAE,IAAI,CAACX,KAAK,CAACW,WAAY;QACpCC,YAAY,EAAE,IAAI,CAACZ,KAAK,CAACY,YAAa;QACtCW,sBAAsB,EAAE,IAAI,CAACA;MAAuB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAGA,eAAe1B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}