{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initalDatasetObject = {\n  name: '',\n  path: ''\n};\nclass GetDataset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serverUrl: 'http://localhost:5220/dataset',\n      dataset: initalDatasetObject,\n      isLoaded: false,\n      error: '',\n      datasetOriginalJSON: JSON\n    };\n  }\n  componentDidMount() {\n    this.checkConnection();\n    this.fetchData();\n  }\n  checkConnection() {\n    try {\n      const response = fetch(this.state.serverUrl);\n      console.log(response.then());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  fetchData() {\n    console.log(\"Fetch data\");\n    try {\n      fetch(this.state.serverUrl).then(res => res.json()).then(result => {\n        console.log(JSON.stringify(result.items[0]));\n        let newStatusMap = new Map();\n        newStatusMap.set(\"boundedAlluxioCluster\", result.items[0].status.boundedAlluxioCluster);\n        newStatusMap.set(\"phase\", result.items[0].status.phase);\n        let currentDatasetObject = {\n          name: result.items[0].name,\n          path: result.items[0].path,\n          status: newStatusMap\n        };\n        this.setState({\n          isLoaded: true,\n          dataset: currentDatasetObject,\n          datasetOriginalJSON: result.items[0]\n        });\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      dataset\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n    } else {\n      var _dataset$status, _dataset$status2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GetDataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), dataset.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Path\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), dataset.path]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS Status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Data Set Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"boundedAlluxioCluster: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), (_dataset$status = dataset.status) === null || _dataset$status === void 0 ? void 0 : _dataset$status.get('boundedAlluxioCluster'), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"phase: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), (_dataset$status2 = dataset.status) === null || _dataset$status2 === void 0 ? void 0 : _dataset$status2.get('phase')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DS JSON\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Original JSON:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: JSON.stringify(this.state.datasetOriginalJSON)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default GetDataset;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Fragment","_Fragment","initalDatasetObject","name","path","GetDataset","constructor","args","state","serverUrl","dataset","isLoaded","error","datasetOriginalJSON","JSON","componentDidMount","checkConnection","fetchData","response","fetch","console","log","then","res","json","result","stringify","items","newStatusMap","Map","set","status","boundedAlluxioCluster","phase","currentDatasetObject","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_dataset$status","_dataset$status2","get"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/dataset/GetDataset.tsx"],"sourcesContent":["import { Component } from 'react';\nimport dataset from \"../../pages/dataset\";\n\ninterface Dataset {\n    name: string,\n    path: string,\n    credentials?: Map<string, string>\n    status?: Map<string, string>\n}\nconst initalDatasetObject : Dataset = {\n    name: '',\n    path: '',\n}\n\nclass GetDataset extends Component {\n    state = {\n        serverUrl: 'http://localhost:5220/dataset',\n        dataset: initalDatasetObject,\n        isLoaded: false,\n        error: '',\n        datasetOriginalJSON: JSON,\n    };\n\n    componentDidMount() {\n        this.checkConnection()\n        this.fetchData();\n    }\n\n    checkConnection() {\n        try {\n            const response = fetch(this.state.serverUrl)\n            console.log(response.then())\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchData() {\n        console.log(\"Fetch data\")\n        try {\n            fetch(this.state.serverUrl)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        console.log(JSON.stringify(result.items[0]));\n\n                        let newStatusMap = new Map<string, string>()\n                        newStatusMap.set(\"boundedAlluxioCluster\", result.items[0].status.boundedAlluxioCluster)\n                        newStatusMap.set(\"phase\", result.items[0].status.phase)\n                        let currentDatasetObject: Dataset = {\n                            name: result.items[0].name,\n                            path: result.items[0].path,\n                            status: newStatusMap,\n                        }\n\n                        this.setState({\n                            isLoaded: true,\n                            dataset: currentDatasetObject,\n                            datasetOriginalJSON: result.items[0]\n                        });\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: false,\n                            error\n                        });\n                    }\n                )\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        const { error, isLoaded, dataset} = this.state;\n        if (error) {\n            return <div className=\"GetDataset\">Error: {error}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"GetDataset\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"GetDataset\">\n\n                    <div className='DS Name'>\n                        <h3>Data Set Name:</h3>\n                        {dataset.name}\n                    </div>\n\n                    <div className='DS Path'>\n                        <h3>Data Set Status:</h3>\n                        {dataset.path}\n                    </div>\n\n                    <div className='DS Status'>\n                        <h3>Data Set Status:</h3>\n                        <h4>boundedAlluxioCluster: </h4>\n                        {dataset.status?.get('boundedAlluxioCluster')}\n                        <h4>phase: </h4>\n                        {dataset.status?.get('phase')}\n                    </div>\n\n                    <div className='DS JSON'>\n                        <h3>Original JSON:</h3>\n                        <>{JSON.stringify(this.state.datasetOriginalJSON)}</>\n\n                    </div>\n\n                </div>\n            );\n        }\n    }\n}\n\nexport default GetDataset\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}