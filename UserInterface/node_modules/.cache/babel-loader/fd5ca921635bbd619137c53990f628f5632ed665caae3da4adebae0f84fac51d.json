{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Snackbar from'@mui/material/Snackbar';import MuiAlert from'@mui/material/Alert';import{jsx as _jsx}from\"react/jsx-runtime\";const Alert=/*#__PURE__*/React.forwardRef(function Alert(props,ref){return/*#__PURE__*/_jsx(MuiAlert,{elevation:6,ref:ref,variant:\"filled\",...props});});export const AlertMethod={NoStatus:-1,Info:0,Success:1,Warning:2,Error:3};const OperatorAlert=_ref=>{let{alertMethod,alertMessage,handleCleanAlertStatus}=_ref;const[method,setMethod]=useState(AlertMethod.NoStatus);const[message,setMessage]=useState('');// useEffect will run when `panelStatus` changes\nuseEffect(()=>{if(alertMethod!==AlertMethod.NoStatus){// console.log(\"Get a new Method Code: \", alertMethod, \"Msg: \", alertMessage)\nsetMethod(alertMethod);setMessage(alertMessage);}},[alertMethod,alertMessage]);const handleClose=(event,reason)=>{if(reason==='clickaway'){return;}setMethod(AlertMethod.NoStatus);setMessage('');// Handle Clean Parent\nhandleCleanAlertStatus();};const severity=[\"info\",\"success\",\"warning\",\"error\"];return/*#__PURE__*/_jsx(Snackbar,{open:method!==AlertMethod.NoStatus,autoHideDuration:3000,onClose:handleClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleClose,severity:severity[method],sx:{width:'100%'},children:message})});};export default OperatorAlert;","map":{"version":3,"names":["React","useEffect","useState","Snackbar","MuiAlert","jsx","_jsx","Alert","forwardRef","props","ref","elevation","variant","AlertMethod","NoStatus","Info","Success","Warning","Error","OperatorAlert","_ref","alertMethod","alertMessage","handleCleanAlertStatus","method","setMethod","message","setMessage","handleClose","event","reason","severity","open","autoHideDuration","onClose","children","sx","width"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/components/alert/Alert.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport const AlertMethod =  {\n    NoStatus : -1,\n    Info : 0,\n    Success : 1,\n    Warning : 2,\n    Error : 3,\n}\n\nconst OperatorAlert = ({ alertMethod, alertMessage, handleCleanAlertStatus}) => {\n    const [method, setMethod] = useState(AlertMethod.NoStatus);\n    const [message, setMessage] = useState('');\n\n    // useEffect will run when `panelStatus` changes\n    useEffect(() => {\n        if (alertMethod !== AlertMethod.NoStatus) {\n            // console.log(\"Get a new Method Code: \", alertMethod, \"Msg: \", alertMessage)\n            setMethod(alertMethod)\n            setMessage(alertMessage)\n        }\n    }, [alertMethod, alertMessage]);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setMethod(AlertMethod.NoStatus)\n        setMessage('')\n\n        // Handle Clean Parent\n        handleCleanAlertStatus()\n    };\n\n    const severity = [\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"error\"\n    ]\n\n    return (\n        <Snackbar open={method !== AlertMethod.NoStatus} autoHideDuration={3000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={severity[method]} sx={{width: '100%'}}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}\nexport default OperatorAlert\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3C,KAAM,CAAAC,KAAK,cAAGP,KAAK,CAACQ,UAAU,CAAC,QAAS,CAAAD,KAAKA,CAACE,KAAK,CAAEC,GAAG,CAAE,CACtD,mBAAOJ,IAAA,CAACF,QAAQ,EAACO,SAAS,CAAE,CAAE,CAACD,GAAG,CAAEA,GAAI,CAACE,OAAO,CAAC,QAAQ,IAAKH,KAAK,CAAG,CAAC,CAC3E,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAI,WAAW,CAAI,CACxBC,QAAQ,CAAG,CAAC,CAAC,CACbC,IAAI,CAAG,CAAC,CACRC,OAAO,CAAG,CAAC,CACXC,OAAO,CAAG,CAAC,CACXC,KAAK,CAAG,CACZ,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAA0D,IAAzD,CAAEC,WAAW,CAAEC,YAAY,CAAEC,sBAAsB,CAAC,CAAAH,IAAA,CACvE,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAACW,WAAW,CAACC,QAAQ,CAAC,CAC1D,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAE1C;AACAD,SAAS,CAAC,IAAM,CACZ,GAAIoB,WAAW,GAAKR,WAAW,CAACC,QAAQ,CAAE,CACtC;AACAW,SAAS,CAACJ,WAAW,CAAC,CACtBM,UAAU,CAACL,YAAY,CAAC,CAC5B,CACJ,CAAC,CAAE,CAACD,WAAW,CAAEC,YAAY,CAAC,CAAC,CAE/B,KAAM,CAAAM,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACnC,GAAIA,MAAM,GAAK,WAAW,CAAE,CACxB,OACJ,CACAL,SAAS,CAACZ,WAAW,CAACC,QAAQ,CAAC,CAC/Ba,UAAU,CAAC,EAAE,CAAC,CAEd;AACAJ,sBAAsB,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAQ,QAAQ,CAAG,CACb,MAAM,CACN,SAAS,CACT,SAAS,CACT,OAAO,CACV,CAED,mBACIzB,IAAA,CAACH,QAAQ,EAAC6B,IAAI,CAAER,MAAM,GAAKX,WAAW,CAACC,QAAS,CAACmB,gBAAgB,CAAE,IAAK,CAACC,OAAO,CAAEN,WAAY,CAAAO,QAAA,cAC1F7B,IAAA,CAACC,KAAK,EAAC2B,OAAO,CAAEN,WAAY,CAACG,QAAQ,CAAEA,QAAQ,CAACP,MAAM,CAAE,CAACY,EAAE,CAAE,CAACC,KAAK,CAAE,MAAM,CAAE,CAAAF,QAAA,CACxET,OAAO,CACL,CAAC,CACF,CAAC,CAEnB,CAAC,CACD,cAAe,CAAAP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}