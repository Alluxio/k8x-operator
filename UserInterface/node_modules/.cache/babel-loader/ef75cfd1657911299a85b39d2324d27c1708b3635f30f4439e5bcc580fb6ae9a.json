{"ast":null,"code":"var _jsxFileName = \"/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset-controller.jsx\";\nimport React, { Component } from 'react';\nimport CreateDataset from \"../components/dataset/CreateDataset\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport { AlertMethod } from \"../components/alert/Alert\";\nimport { sendRequest } from \"../components/util\";\nimport { getRequest } from \"../components/util\";\nimport { isJSONString } from \"../components/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DatasetController extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGetRequest = () => {\n      // Call getRequest\n      getRequest(this.state.serverUrl).then(statusCodeAndMsg => {\n        if (statusCodeAndMsg[0] === AlertMethod.Success) {\n          this.setState({\n            isLoaded: true,\n            datasetListJSON: statusCodeAndMsg[2].datasets\n          });\n          console.log(statusCodeAndMsg[2]);\n        } else {\n          this.setState({\n            alertMethod: statusCodeAndMsg[0],\n            alertMessage: statusCodeAndMsg[1]\n          });\n        }\n      });\n    };\n    // handleSendRequest is a func that will call  and update the panel status\n    this.handleSendRequest = (stringifyJSON, httpMethod) => {\n      // Check the str is JSON or not\n      if (!isJSONString(stringifyJSON)) {\n        this.setState({\n          alertMethod: AlertMethod.Warning,\n          alertMessage: 'This is not a JSON file.'\n        });\n        return;\n      }\n\n      // Prep Http request\n      const requestOptions = {\n        method: httpMethod,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: stringifyJSON\n      };\n\n      // Call sendRequest\n      sendRequest(requestOptions, this.state.serverUrl).then(statusCodeAndMsg => {\n        this.setState({\n          alertMethod: statusCodeAndMsg[0],\n          alertMessage: statusCodeAndMsg[1]\n        });\n      });\n    };\n    this.handleCleanAlertStatus = () => {\n      this.setState({\n        alertMethod: AlertMethod.NoStatus,\n        alertMessage: ''\n      });\n    };\n    this.state = {\n      serverUrl: '/dataset',\n      isLoaded: false,\n      datasetListJSON: JSON,\n      alertMethod: AlertMethod.NoStatus,\n      alertMessage: ''\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.handleGetRequest();\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      isLoaded,\n      datasetListJSON\n    } = this.state;\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dataset\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dataset Controller Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Connecting Endpoint: \", this.state.serverUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dataset Controller Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Datasets, {\n        datasetListJSON: datasetListJSON,\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateDataset, {\n        handleSendRequest: this.handleSendRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OperatorAlert, {\n        alertMethod: this.state.alertMethod,\n        alertMessage: this.state.alertMessage,\n        handleCleanAlertStatus: this.handleCleanAlertStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatasetController;","map":{"version":3,"names":["React","Component","CreateDataset","Datasets","OperatorAlert","AlertMethod","sendRequest","getRequest","isJSONString","jsxDEV","_jsxDEV","DatasetController","constructor","props","handleGetRequest","state","serverUrl","then","statusCodeAndMsg","Success","setState","isLoaded","datasetListJSON","datasets","console","log","alertMethod","alertMessage","handleSendRequest","stringifyJSON","httpMethod","Warning","requestOptions","method","headers","body","handleCleanAlertStatus","NoStatus","JSON","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shoukaiwen/WebstormProjects/alluxio-k8s-operator-ui/src/pages/dataset-controller.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CreateDataset from \"../components/dataset/CreateDataset\";\nimport Datasets from \"../components/dataset/Datasets\";\nimport OperatorAlert from \"../components/alert/Alert\";\nimport {AlertMethod} from \"../components/alert/Alert\";\nimport {sendRequest} from \"../components/util\";\nimport {getRequest} from \"../components/util\";\nimport {isJSONString} from \"../components/util\";\n\n\nclass DatasetController extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            serverUrl: '/dataset',\n            isLoaded: false,\n\n            datasetListJSON: JSON,\n\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.handleGetRequest()\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    handleGetRequest = () =>  {\n        // Call getRequest\n        getRequest(this.state.serverUrl).then(statusCodeAndMsg => {\n            if (statusCodeAndMsg[0] === AlertMethod.Success) {\n                this.setState({\n                    isLoaded: true,\n                    datasetListJSON : statusCodeAndMsg[2].datasets,\n                });\n                console.log(statusCodeAndMsg[2])\n            } else {\n                this.setState({\n                    alertMethod : statusCodeAndMsg[0],\n                    alertMessage : statusCodeAndMsg[1],\n                })\n            }\n        })\n    }\n\n    // handleSendRequest is a func that will call  and update the panel status\n    handleSendRequest = (stringifyJSON, httpMethod) =>  {\n        // Check the str is JSON or not\n        if (!isJSONString(stringifyJSON)) {\n            this.setState({\n                alertMethod : AlertMethod.Warning,\n                alertMessage: 'This is not a JSON file.',\n            })\n            return\n        }\n\n        // Prep Http request\n        const requestOptions = {\n            method: httpMethod,\n            headers: {'Content-Type':'application/json'},\n            body: stringifyJSON\n        };\n\n        // Call sendRequest\n        sendRequest(requestOptions, this.state.serverUrl).then(statusCodeAndMsg => {\n            this.setState({\n                alertMethod : statusCodeAndMsg[0],\n                alertMessage : statusCodeAndMsg[1],\n            })\n        })\n    }\n\n    handleCleanAlertStatus = () =>  {\n        this.setState({\n            alertMethod: AlertMethod.NoStatus,\n            alertMessage: '',\n        })\n    }\n\n    render() {\n        const {isLoaded, datasetListJSON} = this.state\n        if (!isLoaded) {\n            return (\n                <div className=\"Dataset\">\n                    <h1>Dataset Controller Panel</h1>\n                    <br/>\n                    <h2>Connecting Endpoint: {this.state.serverUrl}</h2>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"Dataset\">\n                <h1>Dataset Controller Panel</h1>\n                <br/>\n                <Datasets\n                    datasetListJSON={datasetListJSON}\n                    handleSendRequest={this.handleSendRequest}\n                />\n                <br/>\n                <CreateDataset\n                    handleSendRequest={this.handleSendRequest}\n                />\n\n                <OperatorAlert alertMethod={this.state.alertMethod}\n                               alertMessage={this.state.alertMessage}\n                               handleCleanAlertStatus={this.handleCleanAlertStatus}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DatasetController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}