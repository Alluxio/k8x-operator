#
# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

{{ if .Values.prometheus.enabled -}}
{{- $hostNetwork := .Values.prometheus.hostNetwork }}
{{- $fullName := include "monitor.fullname" . }}
{{- $hostPID := .Values.prometheus.hostPID }}
{{- $name := include "monitor.name" . }}
{{- $chart := include "monitor.chart" . }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: {{ $fullName }}-prometheus
    app: {{ $name }}
    chart: {{ $chart }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ $fullName }}-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ $fullName }}-prometheus
      app: {{ $name }}
      chart: {{ $chart }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      labels:
        name: {{ $fullName }}-prometheus
        app: {{ $name }}
        chart: {{ $chart }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      hostPID: {{ $hostPID }}
      hostNetwork: {{ $hostNetwork }}
      dnsPolicy: {{ .Values.prometheus.dnsPolicy | default ($hostNetwork | ternary "ClusterFirstWithHostNet" "ClusterFirst") }}
      containers:
        - image: {{ .Values.prometheus.imageInfo.image }}:{{ .Values.prometheus.imageInfo.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: {{ $fullName }}-prometheus
          command:
            - "/bin/prometheus"
          args:
            - "--config.file=/etc/prometheus/prometheus.yaml" # the prometheus config file path
            - "--storage.tsdb.path=/prometheus" # Where prometheus writes its database.
            - "--storage.tsdb.retention=72h" # When to remove old data
            - "--web.listen-address=:{{ .Values.prometheus.port }}" # Listen address
          ports:
            - containerPort: {{ .Values.prometheus.port }}
              protocol: TCP
          volumeMounts:
          - mountPath: "/prometheus"
            name: data
          {{- if .Values.prometheusConfig }}
            {{- range .Values.prometheusConfig }}
          - name: {{ $fullName }}-{{ .name }}
            mountPath: "{{ .path }}"
            {{- end }}
          {{- end }}
          {{- if .Values.prometheus.resources  }}
{{ include "monitor.prometheus.resources" . | indent 10 }}
          {{- end }}
      serviceAccountName: {{ $fullName }}-prometheus
      volumes:
        - name: data
          emptyDir: {}
        {{-  if .Values.prometheusConfig }}
          {{- range .Values.prometheusConfig }}
        - name: {{ $fullName }}-{{ .name }}
          configMap:
            name: {{ $fullName }}-{{ .name }}
          {{- end }}
        {{- end }}
{{- end }}
